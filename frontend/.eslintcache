[{"/home/tony/appacademy/first_solo_project/authenticate-me/frontend/src/index.js":"1","/home/tony/appacademy/first_solo_project/authenticate-me/frontend/src/App.js":"2","/home/tony/appacademy/first_solo_project/authenticate-me/frontend/src/store/index.js":"3","/home/tony/appacademy/first_solo_project/authenticate-me/frontend/src/store/csrf.js":"4","/home/tony/appacademy/first_solo_project/authenticate-me/frontend/src/store/session.js":"5","/home/tony/appacademy/first_solo_project/authenticate-me/frontend/src/components/LoginFormPage/index.js":"6","/home/tony/appacademy/first_solo_project/authenticate-me/frontend/src/components/SignupFormPage/index.js":"7","/home/tony/appacademy/first_solo_project/authenticate-me/frontend/src/components/Navigation/index.js":"8","/home/tony/appacademy/first_solo_project/authenticate-me/frontend/src/components/Navigation/ProfileButton.js":"9","/home/tony/appacademy/first_solo_project/authenticate-me/frontend/src/components/Navigation/NotificationBell.js":"10","/home/tony/appacademy/first_solo_project/authenticate-me/frontend/src/components/Navigation/GithubLink.js":"11","/home/tony/appacademy/first_solo_project/authenticate-me/frontend/src/components/GoogleMaps/index.js":"12","/home/tony/appacademy/first_solo_project/authenticate-me/frontend/src/components/Home/index.js":"13","/home/tony/appacademy/first_solo_project/authenticate-me/frontend/src/components/Footer/index.js":"14","/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/index.js":"15","/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/App.js":"16","/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/store/csrf.js":"17","/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/store/session.js":"18","/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/store/index.js":"19","/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/components/LoginFormPage/index.js":"20","/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/components/Home/index.js":"21","/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/components/SignupFormPage/index.js":"22","/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/components/Navigation/index.js":"23","/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/components/Footer/index.js":"24","/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/components/Navigation/ProfileButton.js":"25","/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/components/Navigation/NotificationBell.js":"26","/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/components/Navigation/GithubLink.js":"27","/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/components/GoogleMaps/index.js":"28","/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/store/spot.js":"29","/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/components/Spot/index.js":"30","/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/components/UploadForm/index.js":"31","/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/components/Home/Banner/index.js":"32","/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/components/Rating/index.js":"33","/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/store/booking.js":"34","/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/store/review.js":"35","/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/components/BookingForm/index.js":"36","/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/components/ReviewForm/index.js":"37","/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/store/rating.js":"38","/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/store/media.js":"39","/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/components/Search/index.js":"40","/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/store/search.js":"41","/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/components/AddFriends/index.js":"42","/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/store/user.js":"43","/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/store/relationship.js":"44","/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/components/Home/GlamCamp/index.js":"45","/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/components/Home/HomepagePicPanel/index.js":"46","/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/components/Home/BeMoFa/index.js":"47","/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/components/Home/MyHome/index.js":"48","/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/store/message.js":"49","/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/components/Home/HomeSlogan/index.js":"50"},{"size":814,"mtime":1608239934289,"results":"51","hashOfConfig":"52"},{"size":1163,"mtime":1608666968802,"results":"53","hashOfConfig":"52"},{"size":735,"mtime":1608240273227,"results":"54","hashOfConfig":"52"},{"size":1587,"mtime":1608241502124,"results":"55","hashOfConfig":"52"},{"size":2327,"mtime":1608258969336,"results":"56","hashOfConfig":"52"},{"size":4001,"mtime":1608333821017,"results":"57","hashOfConfig":"52"},{"size":5374,"mtime":1608333935846,"results":"58","hashOfConfig":"52"},{"size":739,"mtime":1608668384846,"results":"59","hashOfConfig":"52"},{"size":2224,"mtime":1608668080454,"results":"60","hashOfConfig":"52"},{"size":863,"mtime":1608668108053,"results":"61","hashOfConfig":"52"},{"size":923,"mtime":1608666415055,"results":"62","hashOfConfig":"52"},{"size":2579,"mtime":1608663850348,"results":"63","hashOfConfig":"52"},{"size":235,"mtime":1608665000243,"results":"64","hashOfConfig":"52"},{"size":329,"mtime":1608665907898,"results":"65","hashOfConfig":"52"},{"size":814,"mtime":1608737851036,"results":"66","hashOfConfig":"67"},{"size":1498,"mtime":1609724218421,"results":"68","hashOfConfig":"67"},{"size":1587,"mtime":1608737851054,"results":"69","hashOfConfig":"67"},{"size":2327,"mtime":1608737851056,"results":"70","hashOfConfig":"67"},{"size":1330,"mtime":1609724218493,"results":"71","hashOfConfig":"67"},{"size":4935,"mtime":1609724218465,"results":"72","hashOfConfig":"67"},{"size":1174,"mtime":1609725026499,"results":"73","hashOfConfig":"67"},{"size":5830,"mtime":1609724218485,"results":"74","hashOfConfig":"67"},{"size":3520,"mtime":1609724218475,"results":"75","hashOfConfig":"67"},{"size":771,"mtime":1609724218430,"results":"76","hashOfConfig":"67"},{"size":3344,"mtime":1609724218471,"results":"77","hashOfConfig":"67"},{"size":863,"mtime":1608737851047,"results":"78","hashOfConfig":"67"},{"size":1262,"mtime":1609724218467,"results":"79","hashOfConfig":"67"},{"size":3795,"mtime":1609722384610,"results":"80","hashOfConfig":"67"},{"size":3355,"mtime":1609724218503,"results":"81","hashOfConfig":"67"},{"size":21169,"mtime":1609725779396,"results":"82","hashOfConfig":"67"},{"size":4016,"mtime":1609415294191,"results":"83","hashOfConfig":"67"},{"size":1825,"mtime":1609724218436,"results":"84","hashOfConfig":"67"},{"size":2434,"mtime":1609459916685,"results":"85","hashOfConfig":"67"},{"size":3063,"mtime":1609724218491,"results":"86","hashOfConfig":"67"},{"size":2100,"mtime":1609252361991,"results":"87","hashOfConfig":"67"},{"size":4327,"mtime":1609724218427,"results":"88","hashOfConfig":"67"},{"size":4429,"mtime":1609724218478,"results":"89","hashOfConfig":"67"},{"size":526,"mtime":1609344419067,"results":"90","hashOfConfig":"67"},{"size":2011,"mtime":1609277362038,"results":"91","hashOfConfig":"67"},{"size":1282,"mtime":1609724218482,"results":"92","hashOfConfig":"67"},{"size":651,"mtime":1609344683275,"results":"93","hashOfConfig":"67"},{"size":3010,"mtime":1609724218424,"results":"94","hashOfConfig":"67"},{"size":2045,"mtime":1609477851453,"results":"95","hashOfConfig":"67"},{"size":2765,"mtime":1609724218500,"results":"96","hashOfConfig":"67"},{"size":412,"mtime":1609724218444,"results":"97","hashOfConfig":"67"},{"size":673,"mtime":1609724218455,"results":"98","hashOfConfig":"67"},{"size":1359,"mtime":1609724218441,"results":"99","hashOfConfig":"67"},{"size":10259,"mtime":1609724218461,"results":"100","hashOfConfig":"67"},{"size":2145,"mtime":1609724218495,"results":"101","hashOfConfig":"67"},{"size":379,"mtime":1609724218452,"results":"102","hashOfConfig":"67"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},"1tu2129",{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},"1uhg24e",{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"134"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"134"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"134"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"134"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"134"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"134"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"134"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"134"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"134"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"134"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"134"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"134"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"203","messages":"204","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"134"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"134"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"134"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},"/home/tony/appacademy/first_solo_project/authenticate-me/frontend/src/index.js",[],["220","221"],"/home/tony/appacademy/first_solo_project/authenticate-me/frontend/src/App.js",["222"],"/home/tony/appacademy/first_solo_project/authenticate-me/frontend/src/store/index.js",[],"/home/tony/appacademy/first_solo_project/authenticate-me/frontend/src/store/csrf.js",[],"/home/tony/appacademy/first_solo_project/authenticate-me/frontend/src/store/session.js",[],"/home/tony/appacademy/first_solo_project/authenticate-me/frontend/src/components/LoginFormPage/index.js",["223","224"],"/home/tony/appacademy/first_solo_project/authenticate-me/frontend/src/components/SignupFormPage/index.js",[],"/home/tony/appacademy/first_solo_project/authenticate-me/frontend/src/components/Navigation/index.js",[],"/home/tony/appacademy/first_solo_project/authenticate-me/frontend/src/components/Navigation/ProfileButton.js",[],"/home/tony/appacademy/first_solo_project/authenticate-me/frontend/src/components/Navigation/NotificationBell.js",["225"],"/home/tony/appacademy/first_solo_project/authenticate-me/frontend/src/components/Navigation/GithubLink.js",["226"],"/home/tony/appacademy/first_solo_project/authenticate-me/frontend/src/components/GoogleMaps/index.js",["227"],"/home/tony/appacademy/first_solo_project/authenticate-me/frontend/src/components/Home/index.js",["228"],"/home/tony/appacademy/first_solo_project/authenticate-me/frontend/src/components/Footer/index.js",[],"/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/index.js",[],["229","230"],"/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/App.js",[],"/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/store/csrf.js",[],"/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/store/session.js",[],"/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/store/index.js",[],"/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/components/LoginFormPage/index.js",["231","232"],"// frontend/src/components/LoginFormPage/index.js\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Redirect, useHistory } from 'react-router-dom';\n\nimport * as sessionActions from '../../store/session';\n\nimport '../Forms.css';\n\nfunction LoginFormPage() {\n  const dispatch = useDispatch();\n  const sessionUser = useSelector(state => state.session.user);\n  const [credential, setCredential] = useState('');\n  const [password, setPassword] = useState('');\n  const [errors, setErrors] = useState([]);\n\n  if (sessionUser) {\n    return <Redirect to='/' />;\n  }\n\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setErrors([]);\n    return dispatch(sessionActions.login({ credential, password }))\n      .catch(res => {\n        if (res.data && res.data.errors) setErrors(res.data.errors);\n      });\n  };\n  return (\n    <form\n      className='form-container'\n      onSubmit={handleSubmit}\n    >\n      <ul className='error-messages'>\n        {errors.map((error, index) => <li key={index}>{error}</li>)}\n      </ul>\n      <label>\n        Username or Email\n        <input\n          type='text'\n          value={credential}\n          onChange={e => setCredential(e.target.value)}\n          required\n        />\n      </label>\n      <label>\n        Password\n        <input\n          type='password'\n          value={password}\n          onChange={e => setPassword(e.target.value)}\n          required\n        />\n      </label>\n      <button\n        className='button'\n        type='submit'\n      >\n        Log in\n      </button>\n    </form>\n  );\n}\n\nexport function LoginFormModal() {\n  const dispatch = useDispatch();\n  const sessionUser = useSelector(state => state.session.user);\n  const [credential, setCredential] = useState('');\n  const [password, setPassword] = useState('');\n  const [errors, setErrors] = useState([]);\n  const [showForm, setShowForm] = useState(false);\n  const loginModalRef = useRef(null);\n  const submitButtonRef = useRef(null);\n  const history = useHistory();\n\n  \n  useEffect(() => {\n    // submitButtonRef.current.focus();\n  }, []);\n\n  // console.log(\"login\", history);\n  if (sessionUser) {\n    return <Redirect to='/' />;\n  }\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setErrors([]);\n\n    return dispatch(sessionActions.login({ credential, password }))\n      .then(res => {\n        if (loginModalRef.current)\n          loginModalRef.current.style.display = \"none\";\n        // history.go(2);\n      })\n      .catch(res => {\n        if (res.data && res.data.errors) setErrors(res.data.errors);\n      });\n  };\n\n  const handleCancelClick = e => {\n    e.preventDefault();\n    if (loginModalRef.current)\n      loginModalRef.current.style.display = \"none\";\n    history.push('/');\n  }\n\n  const handleSignupClick = e => {\n    e.preventDefault();\n    // if (loginModalRef.current)\n    //   loginModalRef.current.style.display = \"none\";    \n    history.push('/signup');\n  }\n  const handleDemoClick = e => {\n    // e.preventDefault(); // no preventing default so we will login immediately\n    setCredential('Demo-user');\n    setPassword('password');\n  }\n\n  return (\n    <div className=\"modal\" ref={loginModalRef}>\n      <form\n        className='form-container modal-content'\n        onSubmit={handleSubmit}\n      >\n        <h3>Login to your account</h3>\n      \n        <ul className='error-messages'>\n          {errors.map((error, index) => <li key={index}>{error}</li>)}\n        </ul>\n        <div className=\"inputs-div\">\n          <div className=\"input-div\">\n            <label>Username or Email</label>\n            <input\n              className='input'\n              type='text'\n              value={credential}\n              onChange={e => setCredential(e.target.value)}\n              required\n              autoFocus={true}\n            />\n          </div>\n          <div className=\"input-div\">\n            <label>Password</label>\n            <input\n              className='input'\n              type='password'\n              value={password}\n              onChange={e => setPassword(e.target.value)}\n              required\n            />\n          </div>\n        </div>\n        <div className=\"buttons-div\">\n          <button\n            className='button'\n            type='submit'\n            ref={submitButtonRef}\n          >Log in</button>\n          <button\n            className='button button-Reset'\n            onClick={handleCancelClick}\n          > Cancel </button>\n        </div>\n        <div className=\"login-signup-invite\">\n          <span>Don't have an account?</span>\n          <span>\n            <button className=\"button button-invite\" onClick={handleSignupClick}>Sign up</button>\n          </span>\n          <span>\n            <button className=\"button button-invite\" onClick={handleDemoClick}>Demo</button>\n          </span>\n        </div>          \n      </form>\n    </div>\n  );\n}\nexport default LoginFormPage;","/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/components/Home/index.js",[],"/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/components/SignupFormPage/index.js",[],"/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/components/Navigation/index.js",[],"/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/components/Footer/index.js",["233"],"\nexport default function Footer(props) {\n  return (\n    <div className=\"main-footer\">\n      {/* <hr /> */}\n      <div className=\"footerdiv\">\n        <span>Github profile</span>\n        <span>Github Repo</span>\n        <span>LinkedIn</span>\n        <span>Facebook</span>\n        <span>YouTube</span>\n      </div>\n    </div>\n  );\n}","/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/components/Navigation/ProfileButton.js",[],"/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/components/Navigation/NotificationBell.js",["234"],"import React,{ useRef } from 'react';\nimport { useDispatch } from 'react-redux';\n\nexport default function NotificationBell({ user }) {\n  const dispatch = useDispatch();\n\n  const dropdownMenuRef = useRef(null);\n\n  function DropdownMenu() {\n    return (\n      <div className=\" dropdown-menu\" ref={dropdownMenuRef}>\n        <div className=\"dropdown-menu-item\">{user.username}</div>\n        <hr className=\"hr\" />\n        <div className=\"dropdown-menu-item\">{user.email}</div>\n      </div>\n    );\n  }\n  return (\n    <>\n      <span\n        className=\"dropdown-menu-parent\"\n      >\n        <button \n          className=\"fa fa-bell icon-span\" \n          style={{marginLeft: '15px'}}\n        />\n        {\n          <DropdownMenu />\n        }\n      </span>\n      <span \n        id=\"notification-number\"\n        className='notification-badge'\n      >9</span>\n    </>\n  );\n}\n","/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/components/Navigation/GithubLink.js",["235","236","237","238"],"import React,{ useRef } from 'react';\nimport { useDispatch } from 'react-redux';\n\nexport default function GithubLink({ user }) {\n  const dispatch = useDispatch();\n\n  const dropdownMenuRef = useRef(null);\n\n  function DropdownMenu() {\n    return (\n      <div className=\" dropdown-menu\" ref={dropdownMenuRef}>\n        <div className=\"dropdown-menu-item\">\n          <a className=\"github-a\" href='https://github.com/suasllc'>Tony Ngo</a>\n          </div>\n        <hr className=\"hr\" />\n        <div className=\"dropdown-menu-item\">\n          <a className=\"github-a\" href='https://github.com/suasllc/fullstack-authenticate-me'>Github Repo</a>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <>\n      <span\n        className=\"dropdown-menu-parent\"\n        style={{marginRight: '20px'}}\n      >\n        <button className=\"fab fa-github icon-span\" />\n        {\n          <DropdownMenu />\n        }\n      </span>\n    </>\n  );\n}\n","/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/components/GoogleMaps/index.js",["239","240","241"],"import React, { useState, useEffect } from 'react'\nimport { GoogleMap, LoadScript, Marker, MarkerClusterer, InfoWindow } from '@react-google-maps/api';\nimport { nanoid } from 'nanoid';\n\n//38.4835° N, 78.8497° W\nconst defaultCenter = {\n  lat: 38.513962313966964,\n  lng: -78.4352627132812\n};\n\nconst position = defaultCenter;\n\nconst defaultLocations = [\n  { lat: 38.6159712, lng: -78.4503689 },\n  { lat: 38.399970959, lng: -78.4956875 },\n  { lat: 38.22864641, lng: -78.71404078 },\n  { lat: 38.24914045, lng: -78.575338394 },\n  { lat: 38.58806741, lng: -78.34050563 },\n]\n\nconst options = {\n  imagePath:\n    'https://developers.google.com/maps/documentation/javascript/examples/markerclusterer/m', // so you must have m1.png, m2.png, m3.png, m4.png, m5.png and m6.png in that folder\n}\n\nconst labels = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\nlet containerStyle = {\n  width: '400px',\n  height: '1000px',\n};\n\nfunction MapComponent({ center = defaultCenter, zoom = 10 }) {\n  const [map, setMap] = React.useState(null)\n\n  const onLoad = React.useCallback(function callback(map) {\n    const bounds = new window.google.maps.LatLngBounds();\n    map.fitBounds(bounds);\n    setMap(map)\n  }, [])\n\n  const onUnmount = React.useCallback(function callback(map) {\n    setMap(null)\n  }, [])\n\n  const onMarkerLoad = marker => {\n    console.log('marker: ', marker)\n  }\n\n  return (\n    <LoadScript\n      googleMapsApiKey=\"AIzaSyAkH92G4PO4QrcdQ1GjsX5ThHe7tWNyQog\"\n    >\n      <GoogleMap\n        mapContainerStyle={containerStyle}\n        center={center}\n        zoom={zoom}\n        onLoad={onLoad}\n        onUnmount={onUnmount}\n      >\n        { /* Child components, such as markers, info windows, etc. */}\n        <Marker\n          onLoad={onMarkerLoad}\n          position={position}\n        />\n        <></>\n      </GoogleMap>\n    </LoadScript>\n  )\n}\nexport const MapWithMarkerClusterer = ({\n  center = defaultCenter,\n  zoom = 7,\n  spots = []\n}) => {\n  const [selected, setSelected] = useState({});\n  const [contStyle, setContStyle] = useState(containerStyle);\n\n  useEffect(() => {\n    window.onresize = () => {\n      containerStyle = {\n        width: `${(window.innerWidth / 3.5).toFixed(0)}px`,\n        height: `${window.innerHeight.toFixed(0)}px`\n      };\n      setContStyle(containerStyle);\n    }  \n  }, [window.innerWidth, window.innerHeight]);\n\n  const onSelect = spot => {\n    setSelected({ spot });\n  }\n  return (\n    <LoadScript\n      googleMapsApiKey=\"AIzaSyAkH92G4PO4QrcdQ1GjsX5ThHe7tWNyQog\"\n    >\n      <GoogleMap id='marker-example' mapContainerStyle={contStyle} zoom={zoom} center={center}>\n        <MarkerClusterer options={options}>\n          {(clusterer) =>\n            spots.map((spot, i) => (\n              <Marker\n                key={nanoid()}\n                position={{ lat: spot.gpsLocation[0], lng: spot.gpsLocation[1] }}\n                clusterer={clusterer}\n                label={labels[i % labels.length]}\n                onClick={() => onSelect(spot)}\n              />\n            ))\n          }\n        </MarkerClusterer>\n        {\n          selected.spot &&\n          (\n            <InfoWindow\n              position={{ lat: selected.spot.gpsLocation[0], lng: selected.spot.gpsLocation[1] }}\n              clickable={true}\n              onCloseClick={() => setSelected({})}\n            >\n              <div>\n                <p><b>{selected.spot.name}</b></p>\n                <p>{\n                  selected.spot.streetAddress + \" \" +\n                  selected.spot.city + \" \" +\n                  selected.spot.stateProvince + \" \" +\n                  selected.spot.zipCode\n                }</p>\n                {/* {Todo: add a picture, add rating} */}\n              </div>\n            </InfoWindow>\n          )\n        }\n      </GoogleMap>\n    </LoadScript>\n  )\n}\n\nexport default MapComponent;","/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/store/spot.js",[],"/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/components/Spot/index.js",["242","243","244","245","246","247","248"],"/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/components/UploadForm/index.js",[],"/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/components/Home/Banner/index.js",["249","250"],"\nimport { useEffect } from 'react';\n\nexport default function Banner() {\n\n  let myIndex = 0;\n\n  function carousel() {\n    let i;\n    let x = document.getElementsByClassName(\"slides\");\n    if (!x.length) return;\n    for (i = 0; i < x.length; i++) {\n      x[i].style.display = \"none\";\n    }\n    myIndex++;\n    if (myIndex > x.length) { myIndex = 1 }\n    x[myIndex - 1].style.display = \"block\";\n    setTimeout(carousel, 10000); // Change image every 2 seconds\n  }\n\n  useEffect(() => {\n    carousel();\n  })\n\n  return (\n    <div className='home-banner-div'>\n      <img className=\"slides\" src=\"https://tripcamp.s3.amazonaws.com/resources/images/official/tripcamp-home1.jpg\" />\n      <img className=\"slides\" src=\"https://tripcamp.s3.amazonaws.com/resources/images/official/tripcamp-home2.jpg\" />\n      <img className=\"slides\" src=\"https://tripcamp.s3.amazonaws.com/resources/images/official/tripcamp-home5.jpg\" />\n      <img className=\"slides\" src=\"https://tripcamp.s3.amazonaws.com/resources/images/official/tripcamp-home4.jpg\" />\n      <img className=\"slides\" src=\"https://tripcamp.s3.amazonaws.com/resources/images/official/tripcamp-home6.jpg\" />\n    </div>\n  );\n}","/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/components/Rating/index.js",["251"],"import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { nanoid } from 'nanoid';\n\nimport { setRatingPOJO } from '../../store/rating';\n\nimport './Rating.css';\n\nexport default function Rating({ rated = 0, userChangeable = false, numberOfReviews = undefined }) {\n  const [trialRating, setTrialRating] = useState(rated);\n  const [rating, setRating] = useState(rated);\n  let arrayOf5 = new Array(5).fill(1);\n  const dispatch = useDispatch();\n\n  if (!userChangeable) {\n    const ratatedWholeNumber = Math.floor(rated);\n    const ratedDecimal = rated - ratatedWholeNumber;\n    return (\n      <div>\n        {\n          arrayOf5.map((el, i) => {\n            return <span\n              className={i < ratatedWholeNumber ?\n                \"fa fa-star checked star-set-font-size\"\n                : (ratedDecimal > 0 && i < ratatedWholeNumber + 1 ? \"fas fa-star-half-alt star-set-font-size checked\" : \"far fa-star star-set-font-size\")\n              }\n              key={nanoid()}\n              id={(i + 1) + \"-\" + nanoid()}\n              onClick={onStarClicked}\n            />\n          })\n        }\n        <span className=\"star-set-font-size\">\n          {typeof (rated) === 'number' && rated > 0 ? rated.toFixed(1) : <></>}\n          {(numberOfReviews !== undefined) && <span>\n            {` - ${numberOfReviews}`}\n            {numberOfReviews > 1 ? \" Reviews\" : \" Review\"}\n          </span>}\n        </span>\n      </div>\n    );\n  }\n\n  function onMouseOver(e) {\n    const id = e.target.id.split(\"-\")[0];\n    setTrialRating(Number(id));\n  }\n  function onMouseLeave() {\n    setTrialRating(rating);\n  }\n\n  function onStarClicked(e) {\n    const ratingNumber = Number(e.target.id.split(\"-\")[0]);\n    setRating(ratingNumber);\n    setTrialRating(ratingNumber)\n    dispatch(setRatingPOJO(ratingNumber));\n  }\n\n  return (\n    <div onMouseOver={onMouseOver} onMouseLeave={onMouseLeave}>\n      <span id={0 + \"-\" + nanoid()} onClick={onStarClicked} className=\"far fa-star star-set-font-size\" style={{ color: \"rgba(0,0,0,0)\" }}> </span>\n      { arrayOf5.map((el, i) => <span\n        className={i < trialRating ? \"fa fa-star checked star-set-font-size\" : \"far fa-star star-set-font-size\"}\n        key={nanoid()}\n        id={(i + 1) + \"-\" + nanoid()}\n        onClick={onStarClicked}\n      />\n      )}\n      <span className=\"far fa-star star-set-font-size\" style={{ color: \"rgba(0,0,0,0)\" }}>{ }</span>\n    </div>\n  );\n}","/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/store/booking.js",[],"/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/store/review.js",["252","253"],"// frontend/src/store/review.js\n\nimport fetch from './csrf';\n\nconst SET_ONE_REVIEW = 'session/SET_ONE_REVIEW';\nconst REMOVE_ONE_REVIEW = 'session/REMOVE_ONE_REVIEW';\nconst SET_ALL_REVIEWS = 'session/SET_ALL_REVIEWS';\nconst REMOVE_ALL_REVIEW = 'session/REMOVE_ALL_REVIEW';\n\nconst setReviewPOJO = (review) => ({\n  type: SET_ONE_REVIEW,\n  review\n});\nconst setAllReviewsPOJO = (reviews) => ({\n  type: SET_ALL_REVIEWS,\n  reviews\n});\nconst removeReviewPOJO = () => ({\n  type: REMOVE_ONE_REVIEW\n});\n\n\nexport const getOneReview = (id) => async dispatch => {\n  const res = await fetch(`/api/reviews/${id}`, {\n  }); //This fetch is a modified fetch, which already returns data after res.json()\n  if (res.ok) {\n    const fedback_review = res.data.review; //we need this user back from backend, NOT the provided\n    dispatch(setReviewPOJO(fedback_review));\n  }\n  return res;\n}\n\nexport const getAllReviews = () => async dispatch => {\n  const res = await fetch(`/api/reviews`, {\n  }); //This fetch is a modified fetch, which already returns data after res.json()\n  if (res.ok) {\n    const fedback_reviews = res.data.reviews; //we need this user back from backend, NOT the provided\n    dispatch(setAllReviewsPOJO(fedback_reviews));\n  }\n  return res;\n}\n\nexport const createOneReview = ({ review }) => async dispatch => {\n  const res = await fetch(`/api/reviews`, {\n    method: 'POST',\n    body: JSON.stringify({ review })\n  }); //This fetch is a modified fetch, which already returns data after res.json()\n  if (res.ok) {\n    const fedback_review = res.data.review;\n    dispatch(setReviewPOJO(fedback_review));\n  }\n  return res;\n}\n\nconst initialState = [];\n\nconst reviewReducer = (state = initialState, action) => {\n  let newState;\n  switch (action.type) {\n    case SET_ONE_REVIEW:\n      newState = JSON.parse(JSON.stringify(state));\n      newState.push(JSON.parse(JSON.stringify(action.review)));\n      return newState;\n    case SET_ALL_REVIEWS:\n      newState = JSON.parse(JSON.stringify([...state, ...action.reviews]));\n      return newState;\n    default:\n      return state;\n  }\n};\n\nexport default reviewReducer;","/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/components/BookingForm/index.js",["254","255"],"// frontend/src/components/BookingForm/index.js\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Redirect, useHistory, useParams } from 'react-router-dom';\n\nimport * as sessionActions from '../../store/session';\nimport * as bookingActions from '../../store/booking';\n\nimport '../Forms.css';\n\nexport default function BookingFormModal() {\n  const dispatch = useDispatch();\n  const sessionUser = useSelector(state => state.session.user);\n  const spots = useSelector(state => state.spots.allSpots);\n  const [startDate, setStartDate] = useState(null);\n  const [endDate, setEndDate] = useState(null);\n  const [numberOfGuests, setNumberOfGuests] = useState(1);\n  const [specialRequest, setSpecialRequest] = useState(\"\");\n  const [errors, setErrors] = useState([]);\n  const bookingModalRef = useRef(null);\n  const history = useHistory();\n  const params = useParams();\n\n  if (!sessionUser) {\n    if (bookingModalRef.current)\n      bookingModalRef.current.style.display = \"none\";\n    console.log('booking', history);\n    return <Redirect to='/login' />;\n  }\n\n  let spot;\n  let spotInfo = <></>;\n\n  //TODO: make this useEffect work so it won't reload spot data everytime user types a key\n  // useEffect(() => {\n  if (params && spots) spot = spots.find(spot => spot.id === Number(params.spotId));\n  // console.log(\"spot\", spot, params);\n  spotInfo = spot && <>\n    <p>Spot:</p>\n    <p>{spot.name}</p>\n    <p>{spot.streetAddress}</p>\n  </>\n  // });\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setErrors([]);\n\n    return dispatch(bookingActions.createOneBooking({\n      booking: {\n        userId: sessionUser.id,\n        spotId: spot.id,\n        startDate,\n        endDate,\n        guests: numberOfGuests,\n        specialRequest\n      }\n    }))\n      .then(res => {\n        if (bookingModalRef.current)\n          bookingModalRef.current.style.display = \"none\";\n        history.push('/');\n      })\n      .catch(res => {\n        if (res.data && res.data.errors) setErrors(res.data.errors);\n      });\n  };\n\n  const handleCancelClick = e => {\n    e.preventDefault();\n    if (bookingModalRef.current)\n      bookingModalRef.current.style.display = \"none\";\n    history.push('/');\n  }\n\n  return (\n    <div className=\"modal\" ref={bookingModalRef}>\n      <form\n        className='form-container modal-content'\n        onSubmit={handleSubmit}\n      >\n        <h3>Booking Form</h3>\n        <div>\n          {\n            spotInfo\n          }\n        </div>\n        <ul className='error-messages'>\n          {errors.map((error, index) => <li key={index}>{error}</li>)}\n        </ul>\n        <div className=\"inputs-div\">\n          <div className=\"input-div\">\n            <label>Start Date</label>\n            <input\n              className='input-date'\n              type='date'\n              value={startDate}\n              onChange={e => setStartDate(e.target.value)}\n              required\n            />\n          </div>\n          <div className=\"input-div\">\n            <label>End Date</label>\n            <input\n              className='input-date'\n              type='date'\n              value={endDate}\n              onChange={e => setEndDate(e.target.value)}\n              required\n            />\n          </div>\n          <div className=\"input-div\">\n            <label>Number of Guests</label>\n            <input\n              className='input-number'\n              type='number'\n              value={numberOfGuests}\n              min={1}\n              onChange={e => setNumberOfGuests(e.target.value)}\n              required\n            />\n          </div>\n          <div className=\"input-div\">\n            <label>Special Request</label>\n            <textarea\n              className='input'\n              type='text'\n              value={specialRequest}\n              onChange={e => setSpecialRequest(e.target.value)}\n              // required // this is NOT required\n            />\n          </div>\n        </div>\n        <div className=\"buttons-div\">\n          <button\n            className='button'\n            type='submit'\n          >Submit</button>\n          <button\n            className='button button-Reset'\n            onClick={handleCancelClick}\n          > Cancel </button>\n        </div>\n      </form>\n    </div>\n  );\n}\n","/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/components/ReviewForm/index.js",["256","257","258"],"// frontend/src/components/ReviewForm/index.js\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Redirect, useHistory, useParams } from 'react-router-dom';\n\nimport * as reviewActions from '../../store/review';\n\nimport Rating from '../Rating';\n\nimport '../Forms.css';\nimport { nanoid } from 'nanoid';\n\nexport default function ReviewFormModal({ divClass = \"modal\", formContentClass = 'form-container modal-content' }) {\n  const dispatch = useDispatch();\n  const sessionUser = useSelector(state => state.session.user);\n  const spots = useSelector(state => state.spots.allSpots);\n  const ratings = useSelector(state => state.ratings);\n  const [title, setTitle] = useState(\"\");\n  const [body, setBody] = useState(\"\");\n  const [errors, setErrors] = useState([]);\n  const reviewModalRef = useRef(null);\n  const history = useHistory();\n  const params = useParams();\n  const [enableSubmit, setEnableSubmit] = useState(false);\n  let realtimeRating;\n  const [spot, setSpot] = useState(null);\n\n  useEffect(() => {\n    if (params && spots) {\n      setSpot(spots.find(spot => spot.id === Number(params.spotId)));\n      realtimeRating = undefined;\n    }\n  }, [params]);\n\n  useEffect(() => {\n    realtimeRating = ratings[ratings.length - 1];\n  }, [ratings]);\n\n  useEffect(() => {\n    if(realtimeRating && title && body) setEnableSubmit(true);\n    else setEnableSubmit(false);\n  }, [ratings])\n\n  if (!sessionUser) {\n    if (reviewModalRef.current)\n      reviewModalRef.current.style.display = \"none\";\n    return <Redirect to='/login' />;\n  }\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setErrors([]);\n\n    console.log('realtimeRating', realtimeRating, 'ratings[ratings.length - 1]', ratings[ratings.length - 1]);\n    if (!ratings[ratings.length - 1])\n      return setErrors([\"Select a rating\"]);\n\n    return dispatch(reviewActions.createOneReview({\n      review: {\n        userId: sessionUser.id,\n        spotId: spot.id,\n        title,\n        body,\n        rating: ratings[ratings.length - 1]\n      }\n    }))\n      .then(res => {\n        if (reviewModalRef.current)\n          reviewModalRef.current.style.display = \"none\";\n        history.push('/');\n      })\n      .catch(res => {\n        if (res.data && res.data.errors) setErrors(res.data.errors);\n      });\n  };\n\n  const handleCancelClick = e => {\n    e.preventDefault();\n    if (reviewModalRef.current)\n      reviewModalRef.current.style.display = \"none\";\n    history.push('/');\n  }\n\n  return (\n    <div className={divClass} ref={reviewModalRef}>\n      <form\n        className={formContentClass}\n        onSubmit={handleSubmit}\n      >\n        <h3>Review Form</h3>\n        <div>\n          {\n            spot && <>\n              <p>Spot:</p>\n              <p>{spot.name}</p>\n              <p>{spot.streetAddress}</p>\n            </>\n          }\n        </div>\n        <ul className='error-messages'>\n          {errors.map((error, index) => <li key={index}>{error}</li>)}\n        </ul>\n        <div className=\"inputs-div\">\n          <div className=\"input-div\">\n            <label>Title</label>\n            <input\n              className='input'\n              type='text'\n              value={title}\n              onChange={e => setTitle(e.target.value)}\n              required\n              autoFocus={true}\n            />\n          </div>\n          <div className=\"input-div\">\n            <label>Body</label>\n            <textarea\n              className='input'\n              type='text'\n              value={body}\n              onChange={e => setBody(e.target.value)}\n              rows={8}\n              required\n            />\n          </div>\n          <div className=\"input-div\">\n            <label>Rating</label>\n            <Rating userChangeable={true} id={\"rating\" + nanoid()} />\n          </div>\n        </div>\n        <div className=\"buttons-div\">\n          <button\n            className='button'\n            type='submit'\n            disabled={!enableSubmit}\n          >Submit</button>\n          <button\n            className='button button-Reset'\n            onClick={handleCancelClick}\n          > Cancel </button>\n        </div>\n      </form>\n    </div>\n  );\n}\n","/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/store/rating.js",[],"/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/store/media.js",["259"],"// frontend/src/store/media.js\n\nimport fetch from './csrf';\n\nconst SET_ONE_MEDIUM = 'session/SET_ONE_MEDIUM';\nconst SET_ALL_MEDIA = 'session/SET_ALL_MEDIA';\nconst REMOVE_ONE_MEDIUM = 'session/REMOVE_ONE_MEDIUM';\n\nconst setMediumPOJO = (medium) => ({\n  type: SET_ONE_MEDIUM,\n  medium\n});\nconst setAllMediaPOJO = (media) => ({\n  type: SET_ALL_MEDIA,\n  media\n});\nconst removeMediumPOJO = () => ({\n  type: REMOVE_ONE_MEDIUM\n});\n\n\nexport const getOneMedium = (id) => async dispatch => {\n  const res = await fetch(`/api/media/${id}`, {\n  }); //This fetch is a modified fetch, which already returns data after res.json()\n  if (res.ok) {\n    const fedback_medium = res.data.medium; //we need this user back from backend, NOT the provided\n    dispatch(setMediumPOJO(fedback_medium));\n  }\n  return res;\n}\n\nexport const getAllMedia = () => async dispatch => {\n  const res = await fetch(`/api/media`, {\n  }); //This fetch is a modified fetch, which already returns data after res.json()\n  if (res.ok) {\n    const fedback_media = res.data.media; //we need this user back from backend, NOT the provided\n    dispatch(setAllMediaPOJO(fedback_media));\n  }\n  return res;\n}\nexport const createOneMedium = ({ medium }) => async dispatch => {\n  const res = await fetch(`/api/media`, {\n    method: 'POST',\n    body: JSON.stringify({ medium })\n  }); //This fetch is a modified fetch, which already returns data after res.json()\n  if (res.ok) {\n    const fedback_medium = res.data.medium;\n    dispatch(setMediumPOJO(fedback_medium));\n  }\n  return res;\n}\n\nconst initialState = [];\n\nconst mediumReducer = (state = initialState, action) => {\n  let newState;\n  switch (action.type) {\n    case SET_ONE_MEDIUM:\n      newState = JSON.parse(JSON.stringify(state));\n      newState.push(JSON.parse(JSON.stringify(action.medium)));\n      return newState;\n    case SET_ALL_MEDIA:\n      newState = JSON.parse(JSON.stringify([...state, ...action.media]));\n      return newState;\n    default:\n      return state;\n  }\n};\n\nexport default mediumReducer;","/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/components/Search/index.js",["260"],"\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport * as searchActions from '../../store/search';\n\nimport './Search.css';\n\nexport default function MainSearchBar() {\n  const [searchValue, setSearchValue] = useState(\"\");\n  const dispatch = useDispatch();\n\n  const onInputChange = e => {\n    e.preventDefault();\n    setSearchValue(e.target.value);\n    dispatch(searchActions.setSearchPOJO({text: e.target.value}));\n    console.log(\"search box value:\", e.target.value);\n  }\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(searchActions.setSearchPOJO({text: searchValue}));\n    setSearchValue(\"\");\n  }\n  return (\n    <form \n      type='submit'\n      className='search-over-banner-div'\n      onSubmit={handleSubmit}\n    >\n      <i className=\"fas fa-search search-icon-class\" ></i>\n      <input\n        className='main-search-bar'\n        type='text'\n        placeholder='Enter anything to search'\n        value={searchValue}\n        onChange={onInputChange}\n      />\n    </form>\n  );\n}","/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/store/search.js",[],"/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/components/AddFriends/index.js",[],"/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/store/user.js",["261"],"/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/store/relationship.js",["262"],"// frontend/src/store/relationship.js\n\nimport fetch from './csrf';\n\nconst SET_ONE_RELATION = 'session/SET_ONE_RELATION';\nconst SET_ALL_RELATIONS = 'session/SET_ALL_RELATIONS';\nconst REMOVE_ONE_RELATION = 'session/REMOVE_ONE_RELATION';\n\nconst setRelationshipPOJO = (relationship) => ({\n  type: SET_ONE_RELATION,\n  relationship\n});\nconst setAllRelationshipsPOJO = (relationships) => ({\n  type: SET_ALL_RELATIONS,\n  relationships\n});\nconst removeRelationshipPOJO = () => ({\n  type: REMOVE_ONE_RELATION\n});\n\n\nexport const getOneRelationship = (id) => async dispatch => {\n  const res = await fetch(`/api/relationships/${id}`, {\n  }); //This fetch is a modified fetch, which already returns data after res.json()\n  if (res.ok) {\n    const fedback_relationship = res.data.relationship; //we need this user back from backend, NOT the provided\n    dispatch(setRelationshipPOJO(fedback_relationship));\n  }\n  return res;\n}\n\nexport const getAllRelationships = () => async dispatch => {\n  const res = await fetch(`/api/relationships`, {\n  }); //This fetch is a modified fetch, which already returns data after res.json()\n  if (res.ok) {\n    const fedback_relationships = res.data.relationships; //we need this user back from backend, NOT the provided\n    dispatch(setAllRelationshipsPOJO(fedback_relationships));\n  }\n  return res;\n}\nexport const createOneRelationship = ({ relationship }) => async dispatch => {\n  const res = await fetch(`/api/relationships`, {\n    method: 'POST',\n    body: JSON.stringify({ relationship })\n  }); //This fetch is a modified fetch, which already returns data after res.json()\n  if (res.ok) {\n    const fedback_relationship = res.data.relationship;\n    dispatch(setRelationshipPOJO(fedback_relationship));\n  }\n  return res;\n}\n\nconst initialState = [];\n\nconst relationshipReducer = (state = initialState, action) => {\n  let newState;\n  switch (action.type) {\n    case SET_ONE_RELATION:\n      newState = JSON.parse(JSON.stringify(state));\n      newState.push(JSON.parse(JSON.stringify(action.relationship)));\n      return newState;\n    case SET_ALL_RELATIONS:\n      newState = JSON.parse(JSON.stringify([...state, ...action.relationships]));\n      return newState;\n    default:\n      return state;\n  }\n};\n\nexport default relationshipReducer;","/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/components/Home/GlamCamp/index.js",[],"/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/components/Home/HomepagePicPanel/index.js",[],"/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/components/Home/BeMoFa/index.js",[],"/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/components/Home/MyHome/index.js",["263","264","265"],"\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { AllSpots } from '../../Spot';\nimport * as bookingActions from '../../../store/booking';\nimport * as relationshipActions from '../../../store/relationship';\nimport './MyHome.css';\nimport { nanoid } from 'nanoid';\n\nexport default function MyHome() {\n  const dispatch = useDispatch();\n  const sessionUser = useSelector(state => state.session.user);\n  const spots = useSelector(state => state.spots.allSpots)\n  const [bookings, setBookings] = useState([]);\n  const [myOwnBookings, setMyOwnBookings] = useState([]);\n  const [bookingsForMyProps, setBookingsForMyProps] = useState([]);\n  const [relationships, setRelationships] = useState({\n    myRequests: [],\n    theirRequests: [],\n    myFriends: [],\n    myFollowers: [],\n    myFollowings: []\n  });\n\n  useEffect(() => {\n    dispatch(bookingActions.getAllBookings())\n      .then(res => setBookings(res.data.bookings))\n      .catch(e => { });\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (bookings.length) {\n      setMyOwnBookings(bookings.filter(bk => bk.userId === sessionUser.id));\n      setBookingsForMyProps(bookings.filter(bk => bk.userId !== sessionUser.id));\n    }\n  }, [bookings.length])\n\n  useEffect(() => {\n    dispatch(relationshipActions.getAllRelationships(sessionUser.id))\n      .then(res => setRelationships({\n        myRequests: res.data.myRequests,\n        theirRequests: res.data.theirRequests,\n        myFriends: res.data.myFriends,\n        myFollowers: res.data.myFollowers,\n        myFollowings: res.data.myFollowings,\n      }))\n      .catch(e => { });\n  }, [dispatch]);\n\n  const acceptBooking = (e) => {\n    e.preventDefault();\n    const bookingId = Number(e.target.id.split('-')[0]);\n    const booking = bookingsForMyProps.find(bk => bk.id === bookingId);\n    booking.status = 1;\n    booking.myUserId = sessionUser.id;\n    console.log('booking', booking);\n    return dispatch(bookingActions.modifyOneBooking(booking))\n      .then(res => {\n        //TODO implete this\n      })\n      .catch(res => {\n        //TODO implete this\n      });\n  }\n  const refuseBooking = (e) => {\n    e.preventDefault();\n    const bookingId = Number(e.target.id.split('-')[0]);\n    const booking = bookingsForMyProps.find(bk => bk.id === bookingId);\n    booking.status = 2;\n    booking.myUserId = sessionUser.id;\n\n    return dispatch(bookingActions.modifyOneBooking(booking))\n      .then(res => {\n        //TODO implete this\n      })\n      .catch(res => {\n        //TODO implete this\n      });\n    // return dispatch(bookingActions.deleteOneBooking(bookingId))\n    //   .then(res => {\n    //     //TODO implete this\n    //   })\n    //   .catch(res => {\n    //     //TODO implete this\n    //   });\n  }\n  const cancelBooking = (e) => {\n    e.preventDefault();\n    const bookingId = Number(e.target.id.split('-')[0]);\n    return dispatch(bookingActions.deleteOneBooking(bookingId))\n      .then(res => {\n        //TODO implete this\n      })\n      .catch(res => {\n        //TODO implete this\n      });\n  }\n\n  function actOnRequest(e, actionText) {\n    e.preventDefault();\n    let action;\n    let id = Number(e.target.id.split('-')[0]);\n    let relationshipId;\n    switch (actionText.toLowerCase()) {\n      case \"accept\":\n        action = 1;\n        relationshipId = relationships.theirRequests[id].id;\n        break;\n      case \"ignore\":\n        relationshipId = relationships.theirRequests[id].id;\n        action = 2;\n        break;\n      case \"block\":\n        relationshipId = relationships.theirRequests[id].id;\n        action = 3;\n        break;\n      case \"cancel\":\n        relationshipId = relationships.myRequests[id].id;\n        action = 4;\n        break;\n    }\n    const relationship = {\n      id: relationshipId,\n      myUserId: sessionUser.id,\n      status: action\n    }\n    console.log('\\nrelationship', relationship);\n    dispatch(relationshipActions.modifyOneRelationship(relationship))\n      .then(res => {\n\n      })\n      .catch(err => {\n\n      });\n  }\n\n  function bookingTextStatus(status) {\n    switch (status) {\n      case 0:\n        return 'Pending';\n      case 1:\n        return 'Confirmed';\n      case 2:\n        return 'Refused';\n      case 3:\n        return 'Trip completed';\n      case 4:\n        return 'Deleted';\n      default:\n        return 'Unknown status';\n    }\n  }\n\n  return (\n    <div className=\"myhome-main-div\">\n      <AllSpots searchTerm={\"\"} onlyMine={true}\n        mainGridClass='spots-myhome-display-grid'\n        spotMapClass='myspots-div'\n      />\n      <div className=\"myhome-side-info\">\n        <div className=\"myhome-booking-div\">\n          <p>Bookings of My Properties</p>\n          <ul>\n            {\n              bookingsForMyProps && bookingsForMyProps.map(bk =>\n                <li key={nanoid()}>\n                  <p>Booking ID: {bk.id}</p>\n                  <p>SpotID: {spots.find(spot => spot.id === bk.spotId) && spots.find(spot => spot.id === bk.spotId).name}</p>\n                  <p>From: {bk.User && (bk.User.username)}</p>\n                  <p>Start Date: {bk.startDate.slice(0, 10)}</p>\n                  <p>End Date: {bk.endDate.slice(0, 10)}</p>\n                  <p>Status: {bookingTextStatus(bk.status)}</p>\n                  <p>Special Request: {bk.specialRequest}</p>\n                  <button className=\"button button-Send\"\n                    onClick={acceptBooking}\n                    id={`${bk.id}-accept`}\n                  >Accept</button>\n                  <button className=\"button button-Reset\"\n                    onClick={refuseBooking}\n                    id={`${bk.id}-refuse`}\n                  >Refuse</button>\n                </li>)\n            }\n          </ul>\n          <p>My Upcoming Trips</p>\n          <ul>\n            {\n              myOwnBookings && myOwnBookings.map(bk =>\n                <li key={nanoid()}>\n                  <p>Booking ID: {bk.id}</p>\n                  <p>SpotID: {spots.find(spot => spot.id === bk.spotId) && spots.find(spot => spot.id === bk.spotId).name}</p>\n                  <p>Start Date: {bk.startDate.slice(0, 10)}</p>\n                  <p>End Date: {bk.endDate.slice(0, 10)}</p>\n                  <p>Status: {bookingTextStatus(bk.status)}</p>\n                  <button className=\"button button-Reset\"\n                    onClick={cancelBooking}\n                    id={`${bk.id}-cancel`}\n                  >Cancel</button>\n                </li>)\n            }\n          </ul>\n        </div>\n        <div className='myhome-people-div'>\n          <h3>People</h3>\n          <div>\n            <p>My friends</p>\n            <ul>\n              {\n                relationships.myFriends.map(rel =>\n                  <li key={nanoid()}>\n                    <div>\n                      <span className='tooltip'>\n                        {rel.user1.id !== sessionUser.id ? rel.user1.username : rel.user2.username}\n                        <p className='tooltiptext'>To Implement Mini UserProfile</p>\n                      </span>\n                    </div>\n                  </li>)\n              }\n            </ul>\n          </div>\n          <div>\n            <p>Pending friend requests</p>\n            <ul>\n              <li>\n                <p>I requested</p>\n                <ul>\n                  {relationships.myRequests.map((rel, i) =>\n                    <li key={nanoid()}>\n                      <div>\n                        <span className='tooltip'>\n                          {rel.user1.id !== sessionUser.id ? rel.user1.username : rel.user2.username}\n                          <p className='tooltiptext'>To Implement Mini UserProfile</p>\n                        </span>\n                        <span>\n                          <button onClick={e => actOnRequest(e, 'cancel')} id={`${i}-cancel`}>\n                            Cancel\n                          </button>\n                        </span>\n                      </div>\n                    </li>\n                  )\n                  }\n                </ul>\n              </li>\n              <li>\n                <p>People requested me</p>\n                <ul>\n                  {relationships.theirRequests.map((rel, i) =>\n                    <li key={nanoid()}>\n                      <div>\n                        <span className='tooltip'>\n                          {rel.user1.id !== sessionUser.id ? rel.user1.username : rel.user2.username}\n                          <p className='tooltiptext'>To Implement Mini UserProfile</p>\n                        </span>\n                        <span>\n                          <button onClick={e => actOnRequest(e, 'accept')} id={`${i}-accept`}>\n                            Accept\n                          </button>\n                          <button onClick={e => actOnRequest(e, 'ignore')} id={`${i}-ignore`}>\n                            Ignore\n                          </button>\n                          <button onClick={e => actOnRequest(e, 'block')} id={`${i}-block`}>\n                            Block\n                          </button>\n                        </span>\n                      </div>\n                    </li>\n                  )\n                  }\n                </ul>\n              </li>\n            </ul>\n          </div>\n          <div>\n            <p>My follower list</p>\n            <ul>\n              {\n                relationships.myFollowers.map(rel =>\n                  <li key={nanoid()}>\n                    <div>\n                      <span className='tooltip'>\n                        {rel.user1.id !== sessionUser.id ? rel.user1.username : rel.user2.username}\n                        <p className='tooltiptext'>To Implement Mini UserProfile</p>\n                      </span>\n                    </div>\n                  </li>)\n              }\n            </ul>\n          </div>\n          <div>\n            <p>My following list</p>\n            <ul>\n              {\n                relationships.myFollowings.map(rel =>\n                  <li key={nanoid()}>\n                    <div>\n                      <span>{rel.user1.id !== sessionUser.id ? rel.user1.username : rel.user2.username}</span>\n                    </div>\n                  </li>)\n              }\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}","/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/store/message.js",["266","267"],"// frontend/src/store/message.js\n\nimport fetch from './csrf';\n\nconst SET_ONE_MESSAGE = 'session/SET_ONE_MESSAGE';\nconst REMOVE_ONE_MESSAGE = 'session/REMOVE_ONE_MESSAGE';\nconst SET_ALL_MESSAGES = 'session/SET_ALL_MESSAGES';\nconst REMOVE_ALL_MESSAGE = 'session/REMOVE_ALL_MESSAGE';\n\nconst setMessagePOJO = (message) => ({\n  type: SET_ONE_MESSAGE,\n  message\n});\nconst setAllMessagesPOJO = (messages) => ({\n  type: SET_ALL_MESSAGES,\n  messages\n});\nconst removeMessagePOJO = () => ({\n  type: REMOVE_ONE_MESSAGE\n});\n\n\nexport const getOneMessage = (id) => async dispatch => {\n  const res = await fetch(`/api/messages/${id}`, {\n  }); //This fetch is a modified fetch, which already returns data after res.json()\n  if (res.ok) {\n    const fedback_message = res.data.message; //we need this user back from backend, NOT the provided\n    dispatch(setMessagePOJO(fedback_message));\n  }\n  return res;\n}\n\nexport const getAllMessages = () => async dispatch => {\n  const res = await fetch(`/api/messages`, {\n  }); //This fetch is a modified fetch, which already returns data after res.json()\n  if (res.ok) {\n    const fedback_messages = res.data.messages; //we need this user back from backend, NOT the provided\n    dispatch(setAllMessagesPOJO(fedback_messages));\n  }\n  return res;\n}\n\nexport const createOneMessage = ({ message }) => async dispatch => {\n  const res = await fetch(`/api/messages`, {\n    method: 'POST',\n    body: JSON.stringify({ message })\n  }); //This fetch is a modified fetch, which already returns data after res.json()\n  if (res.ok) {\n    const fedback_message = res.data.message;\n    dispatch(setMessagePOJO(fedback_message));\n  }\n  return res;\n}\n\nconst initialState = [];\n\nconst messageReducer = (state = initialState, action) => {\n  let newState;\n  switch (action.type) {\n    case SET_ONE_MESSAGE:\n      newState = JSON.parse(JSON.stringify(state));\n      newState.push(JSON.parse(JSON.stringify(action.message)));\n      return newState;\n    case SET_ALL_MESSAGES:\n      newState = JSON.parse(JSON.stringify([...state, ...action.messages]));\n      return newState;\n    default:\n      return state;\n  }\n};\n\nexport default messageReducer;","/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/components/Home/HomeSlogan/index.js",[],{"ruleId":"268","replacedBy":"269"},{"ruleId":"270","replacedBy":"271"},{"ruleId":"272","severity":1,"message":"273","line":2,"column":25,"nodeType":"274","messageId":"275","endLine":2,"endColumn":33},{"ruleId":"272","severity":1,"message":"276","line":73,"column":10,"nodeType":"274","messageId":"275","endLine":73,"endColumn":18},{"ruleId":"272","severity":1,"message":"277","line":73,"column":20,"nodeType":"274","messageId":"275","endLine":73,"endColumn":31},{"ruleId":"272","severity":1,"message":"278","line":5,"column":9,"nodeType":"274","messageId":"275","endLine":5,"endColumn":17},{"ruleId":"272","severity":1,"message":"278","line":5,"column":9,"nodeType":"274","messageId":"275","endLine":5,"endColumn":17},{"ruleId":"272","severity":1,"message":"279","line":36,"column":10,"nodeType":"274","messageId":"275","endLine":36,"endColumn":13},{"ruleId":"272","severity":1,"message":"280","line":1,"column":8,"nodeType":"274","messageId":"275","endLine":1,"endColumn":20},{"ruleId":"268","replacedBy":"281"},{"ruleId":"270","replacedBy":"282"},{"ruleId":"272","severity":1,"message":"276","line":73,"column":10,"nodeType":"274","messageId":"275","endLine":73,"endColumn":18},{"ruleId":"272","severity":1,"message":"277","line":73,"column":20,"nodeType":"274","messageId":"275","endLine":73,"endColumn":31},{"ruleId":"283","severity":1,"message":"284","line":13,"column":54,"nodeType":"285","endLine":13,"endColumn":69},{"ruleId":"272","severity":1,"message":"278","line":5,"column":9,"nodeType":"274","messageId":"275","endLine":5,"endColumn":17},{"ruleId":"272","severity":1,"message":"278","line":5,"column":9,"nodeType":"274","messageId":"275","endLine":5,"endColumn":17},{"ruleId":"283","severity":1,"message":"284","line":17,"column":35,"nodeType":"285","endLine":17,"endColumn":50},{"ruleId":"283","severity":1,"message":"284","line":20,"column":35,"nodeType":"285","endLine":20,"endColumn":50},{"ruleId":"283","severity":1,"message":"284","line":23,"column":35,"nodeType":"285","endLine":23,"endColumn":50},{"ruleId":"272","severity":1,"message":"286","line":13,"column":7,"nodeType":"274","messageId":"275","endLine":13,"endColumn":23},{"ruleId":"272","severity":1,"message":"279","line":33,"column":10,"nodeType":"274","messageId":"275","endLine":33,"endColumn":13},{"ruleId":"287","severity":1,"message":"288","line":86,"column":6,"nodeType":"289","endLine":86,"endColumn":45,"suggestions":"290"},{"ruleId":"272","severity":1,"message":"291","line":40,"column":10,"nodeType":"274","messageId":"275","endLine":40,"endColumn":19},{"ruleId":"287","severity":1,"message":"292","line":56,"column":6,"nodeType":"289","endLine":56,"endColumn":14,"suggestions":"293"},{"ruleId":"294","severity":1,"message":"295","line":110,"column":17,"nodeType":"296","endLine":117,"endColumn":18},{"ruleId":"294","severity":1,"message":"295","line":118,"column":17,"nodeType":"296","endLine":125,"endColumn":18},{"ruleId":"287","severity":1,"message":"297","line":207,"column":6,"nodeType":"289","endLine":207,"endColumn":36,"suggestions":"298"},{"ruleId":"287","severity":1,"message":"299","line":234,"column":6,"nodeType":"289","endLine":234,"endColumn":30,"suggestions":"300"},{"ruleId":"287","severity":1,"message":"301","line":242,"column":6,"nodeType":"289","endLine":242,"endColumn":18,"suggestions":"302"},{"ruleId":"303","severity":1,"message":"304","line":32,"column":7,"nodeType":"296","endLine":32,"endColumn":118},{"ruleId":"303","severity":1,"message":"304","line":35,"column":7,"nodeType":"296","endLine":35,"endColumn":151},{"ruleId":"272","severity":1,"message":"305","line":2,"column":23,"nodeType":"274","messageId":"275","endLine":2,"endColumn":34},{"ruleId":"272","severity":1,"message":"306","line":8,"column":7,"nodeType":"274","messageId":"275","endLine":8,"endColumn":24},{"ruleId":"272","severity":1,"message":"307","line":18,"column":7,"nodeType":"274","messageId":"275","endLine":18,"endColumn":23},{"ruleId":"272","severity":1,"message":"308","line":7,"column":13,"nodeType":"274","messageId":"275","endLine":7,"endColumn":27},{"ruleId":"287","severity":1,"message":"309","line":31,"column":6,"nodeType":"289","endLine":31,"endColumn":25,"suggestions":"310"},{"ruleId":"287","severity":1,"message":"311","line":34,"column":24,"nodeType":"274","endLine":34,"endColumn":33},{"ruleId":"287","severity":1,"message":"311","line":39,"column":22,"nodeType":"312","endLine":39,"endColumn":49},{"ruleId":"287","severity":1,"message":"313","line":45,"column":6,"nodeType":"289","endLine":45,"endColumn":15,"suggestions":"314"},{"ruleId":"272","severity":1,"message":"315","line":17,"column":7,"nodeType":"274","messageId":"275","endLine":17,"endColumn":23},{"ruleId":"287","severity":1,"message":"316","line":17,"column":6,"nodeType":"289","endLine":17,"endColumn":19,"suggestions":"317"},{"ruleId":"272","severity":1,"message":"318","line":17,"column":7,"nodeType":"274","messageId":"275","endLine":17,"endColumn":23},{"ruleId":"272","severity":1,"message":"319","line":17,"column":7,"nodeType":"274","messageId":"275","endLine":17,"endColumn":29},{"ruleId":"287","severity":1,"message":"320","line":36,"column":6,"nodeType":"289","endLine":36,"endColumn":23,"suggestions":"321"},{"ruleId":"287","severity":1,"message":"297","line":48,"column":6,"nodeType":"289","endLine":48,"endColumn":16,"suggestions":"322"},{"ruleId":"323","severity":1,"message":"324","line":104,"column":5,"nodeType":"325","messageId":"326","endLine":121,"endColumn":6},{"ruleId":"272","severity":1,"message":"327","line":8,"column":7,"nodeType":"274","messageId":"275","endLine":8,"endColumn":25},{"ruleId":"272","severity":1,"message":"328","line":18,"column":7,"nodeType":"274","messageId":"275","endLine":18,"endColumn":24},"no-native-reassign",["329"],"no-negated-in-lhs",["330"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'showForm' is assigned a value but never used.","'setShowForm' is assigned a value but never used.","'dispatch' is assigned a value but never used.","'map' is assigned a value but never used.","'MapComponent' is defined but never used.",["329"],["330"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","'defaultLocations' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has unnecessary dependencies: 'window.innerHeight' and 'window.innerWidth'. Either exclude them or remove the dependency array. Outer scope values like 'window.innerWidth' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["331"],"'videoUrls' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'reduxSpots'. Either include it or remove the dependency array.",["332"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","React Hook useEffect has a missing dependency: 'sessionUser.id'. Either include it or remove the dependency array.",["333"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["334"],"React Hook useEffect has missing dependencies: 'history', 'location.pathname', and 'onlyMine'. Either include them or remove the dependency array.",["335"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'useSelector' is defined but never used.","'REMOVE_ALL_REVIEW' is assigned a value but never used.","'removeReviewPOJO' is assigned a value but never used.","'sessionActions' is defined but never used.","React Hook useEffect has a missing dependency: 'spots'. Either include it or remove the dependency array.",["336"],"Assignments to the 'realtimeRating' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","MemberExpression","React Hook useEffect has missing dependencies: 'body', 'realtimeRating', and 'title'. Either include them or remove the dependency array.",["337"],"'removeMediumPOJO' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["338"],"'removeFriendPOJO' is assigned a value but never used.","'removeRelationshipPOJO' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'bookings' and 'sessionUser.id'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setMyOwnBookings' needs the current value of 'bookings'.",["339"],["340"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'REMOVE_ALL_MESSAGE' is assigned a value but never used.","'removeMessagePOJO' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"341","fix":"342"},{"desc":"343","fix":"344"},{"desc":"345","fix":"346"},{"desc":"347","fix":"348"},{"desc":"349","fix":"350"},{"desc":"351","fix":"352"},{"desc":"353","fix":"354"},{"desc":"355","fix":"356"},{"desc":"357","fix":"358"},{"desc":"359","fix":"360"},"Update the dependencies array to be: []",{"range":"361","text":"362"},"Update the dependencies array to be: [params, reduxSpots]",{"range":"363","text":"364"},"Update the dependencies array to be: [onlyMine, originalReduxSpots, sessionUser.id]",{"range":"365","text":"366"},"Update the dependencies array to be: [searchText, reduxSpots, history]",{"range":"367","text":"368"},"Update the dependencies array to be: [history, location.pathname, onlyMine, searchText]",{"range":"369","text":"370"},"Update the dependencies array to be: [location.pathname, spots]",{"range":"371","text":"372"},"Update the dependencies array to be: [body, ratings, realtimeRating, title]",{"range":"373","text":"374"},"Update the dependencies array to be: [dispatch, searchValue]",{"range":"375","text":"376"},"Update the dependencies array to be: [bookings, bookings.length, sessionUser.id]",{"range":"377","text":"378"},"Update the dependencies array to be: [dispatch, sessionUser.id]",{"range":"379","text":"380"},[2275,2314],"[]",[1952,1960],"[params, reduxSpots]",[7781,7811],"[onlyMine, originalReduxSpots, sessionUser.id]",[8640,8664],"[searchText, reduxSpots, history]",[8852,8864],"[history, location.pathname, onlyMine, searchText]",[1187,1206],"[location.pathname, spots]",[1581,1590],"[body, ratings, realtimeRating, title]",[437,450],"[dispatch, searchValue]",[1233,1250],"[bookings, bookings.length, sessionUser.id]",[1635,1645],"[dispatch, sessionUser.id]"]