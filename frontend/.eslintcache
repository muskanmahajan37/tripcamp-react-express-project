[{"/home/tony/appacademy/first_solo_project/authenticate-me/frontend/src/index.js":"1","/home/tony/appacademy/first_solo_project/authenticate-me/frontend/src/App.js":"2","/home/tony/appacademy/first_solo_project/authenticate-me/frontend/src/store/index.js":"3","/home/tony/appacademy/first_solo_project/authenticate-me/frontend/src/store/csrf.js":"4","/home/tony/appacademy/first_solo_project/authenticate-me/frontend/src/store/session.js":"5","/home/tony/appacademy/first_solo_project/authenticate-me/frontend/src/components/LoginFormPage/index.js":"6","/home/tony/appacademy/first_solo_project/authenticate-me/frontend/src/components/SignupFormPage/index.js":"7","/home/tony/appacademy/first_solo_project/authenticate-me/frontend/src/components/Navigation/index.js":"8","/home/tony/appacademy/first_solo_project/authenticate-me/frontend/src/components/Navigation/ProfileButton.js":"9","/home/tony/appacademy/first_solo_project/authenticate-me/frontend/src/components/Navigation/NotificationBell.js":"10","/home/tony/appacademy/first_solo_project/authenticate-me/frontend/src/components/Navigation/GithubLink.js":"11","/home/tony/appacademy/first_solo_project/authenticate-me/frontend/src/components/GoogleMaps/index.js":"12","/home/tony/appacademy/first_solo_project/authenticate-me/frontend/src/components/Home/index.js":"13","/home/tony/appacademy/first_solo_project/authenticate-me/frontend/src/components/Footer/index.js":"14","/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/index.js":"15","/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/App.js":"16","/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/store/csrf.js":"17","/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/store/session.js":"18","/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/store/index.js":"19","/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/components/LoginFormPage/index.js":"20","/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/components/Home/index.js":"21","/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/components/SignupFormPage/index.js":"22","/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/components/Navigation/index.js":"23","/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/components/Footer/index.js":"24","/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/components/Navigation/ProfileButton.js":"25","/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/components/Navigation/NotificationBell.js":"26","/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/components/Navigation/GithubLink.js":"27","/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/components/GoogleMaps/index.js":"28","/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/store/spot.js":"29","/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/components/Spot/index.js":"30","/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/components/UploadForm/index.js":"31","/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/components/Home/Banner/index.js":"32","/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/components/Rating/index.js":"33","/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/store/booking.js":"34","/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/store/review.js":"35","/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/components/BookingForm/index.js":"36","/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/components/ReviewForm/index.js":"37","/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/store/rating.js":"38","/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/store/media.js":"39","/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/components/Search/index.js":"40","/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/store/search.js":"41"},{"size":814,"mtime":1608239934289,"results":"42","hashOfConfig":"43"},{"size":1163,"mtime":1608666968802,"results":"44","hashOfConfig":"43"},{"size":735,"mtime":1608240273227,"results":"45","hashOfConfig":"43"},{"size":1587,"mtime":1608241502124,"results":"46","hashOfConfig":"43"},{"size":2327,"mtime":1608258969336,"results":"47","hashOfConfig":"43"},{"size":4001,"mtime":1608333821017,"results":"48","hashOfConfig":"43"},{"size":5374,"mtime":1608333935846,"results":"49","hashOfConfig":"43"},{"size":739,"mtime":1608668384846,"results":"50","hashOfConfig":"43"},{"size":2224,"mtime":1608668080454,"results":"51","hashOfConfig":"43"},{"size":863,"mtime":1608668108053,"results":"52","hashOfConfig":"43"},{"size":923,"mtime":1608666415055,"results":"53","hashOfConfig":"43"},{"size":2579,"mtime":1608663850348,"results":"54","hashOfConfig":"43"},{"size":235,"mtime":1608665000243,"results":"55","hashOfConfig":"43"},{"size":329,"mtime":1608665907898,"results":"56","hashOfConfig":"43"},{"size":814,"mtime":1608737851036,"results":"57","hashOfConfig":"58"},{"size":1854,"mtime":1609360159239,"results":"59","hashOfConfig":"58"},{"size":1587,"mtime":1608737851054,"results":"60","hashOfConfig":"58"},{"size":2327,"mtime":1608737851056,"results":"61","hashOfConfig":"58"},{"size":1112,"mtime":1609350991270,"results":"62","hashOfConfig":"58"},{"size":4929,"mtime":1609264278772,"results":"63","hashOfConfig":"58"},{"size":435,"mtime":1609360223474,"results":"64","hashOfConfig":"58"},{"size":5824,"mtime":1609264296547,"results":"65","hashOfConfig":"58"},{"size":739,"mtime":1608737851051,"results":"66","hashOfConfig":"58"},{"size":329,"mtime":1608737851042,"results":"67","hashOfConfig":"58"},{"size":2691,"mtime":1609266075315,"results":"68","hashOfConfig":"58"},{"size":863,"mtime":1608737851047,"results":"69","hashOfConfig":"58"},{"size":923,"mtime":1608737851049,"results":"70","hashOfConfig":"58"},{"size":3776,"mtime":1609363765949,"results":"71","hashOfConfig":"58"},{"size":2011,"mtime":1609274872486,"results":"72","hashOfConfig":"58"},{"size":12565,"mtime":1609356068014,"results":"73","hashOfConfig":"58"},{"size":4012,"mtime":1609280899659,"results":"74","hashOfConfig":"58"},{"size":1158,"mtime":1609360938752,"results":"75","hashOfConfig":"58"},{"size":2220,"mtime":1609256822444,"results":"76","hashOfConfig":"58"},{"size":2087,"mtime":1609210147159,"results":"77","hashOfConfig":"58"},{"size":2100,"mtime":1609252361991,"results":"78","hashOfConfig":"58"},{"size":4300,"mtime":1609254809276,"results":"79","hashOfConfig":"58"},{"size":4140,"mtime":1609365089141,"results":"80","hashOfConfig":"58"},{"size":526,"mtime":1609344419067,"results":"81","hashOfConfig":"58"},{"size":2011,"mtime":1609277362038,"results":"82","hashOfConfig":"58"},{"size":1033,"mtime":1609351229755,"results":"83","hashOfConfig":"58"},{"size":651,"mtime":1609344683275,"results":"84","hashOfConfig":"58"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},"1tu2129",{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},"1uhg24e",{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"116"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"116"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"116"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"146","messages":"147","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"116"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"116"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"116"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"116"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"116"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"116"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"116"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},"/home/tony/appacademy/first_solo_project/authenticate-me/frontend/src/index.js",[],["179","180"],"/home/tony/appacademy/first_solo_project/authenticate-me/frontend/src/App.js",["181"],"/home/tony/appacademy/first_solo_project/authenticate-me/frontend/src/store/index.js",[],"/home/tony/appacademy/first_solo_project/authenticate-me/frontend/src/store/csrf.js",[],"/home/tony/appacademy/first_solo_project/authenticate-me/frontend/src/store/session.js",[],"/home/tony/appacademy/first_solo_project/authenticate-me/frontend/src/components/LoginFormPage/index.js",["182","183"],"/home/tony/appacademy/first_solo_project/authenticate-me/frontend/src/components/SignupFormPage/index.js",[],"/home/tony/appacademy/first_solo_project/authenticate-me/frontend/src/components/Navigation/index.js",[],"/home/tony/appacademy/first_solo_project/authenticate-me/frontend/src/components/Navigation/ProfileButton.js",[],"/home/tony/appacademy/first_solo_project/authenticate-me/frontend/src/components/Navigation/NotificationBell.js",["184"],"/home/tony/appacademy/first_solo_project/authenticate-me/frontend/src/components/Navigation/GithubLink.js",["185"],"/home/tony/appacademy/first_solo_project/authenticate-me/frontend/src/components/GoogleMaps/index.js",["186"],"/home/tony/appacademy/first_solo_project/authenticate-me/frontend/src/components/Home/index.js",["187"],"/home/tony/appacademy/first_solo_project/authenticate-me/frontend/src/components/Footer/index.js",[],"/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/index.js",[],["188","189"],"/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/App.js",["190"],"/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/store/csrf.js",[],"/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/store/session.js",[],"/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/store/index.js",[],"/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/components/LoginFormPage/index.js",["191","192"],"// frontend/src/components/LoginFormPage/index.js\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Redirect, useHistory } from 'react-router-dom';\n\nimport * as sessionActions from '../../store/session';\n\nimport '../Forms.css';\n\nfunction LoginFormPage() {\n  const dispatch = useDispatch();\n  const sessionUser = useSelector(state => state.session.user);\n  const [credential, setCredential] = useState('');\n  const [password, setPassword] = useState('');\n  const [errors, setErrors] = useState([]);\n\n  if (sessionUser) {\n    return <Redirect to='/' />;\n  }\n\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setErrors([]);\n    return dispatch(sessionActions.login({ credential, password }))\n      .catch(res => {\n        if (res.data && res.data.errors) setErrors(res.data.errors);\n      });\n  };\n  return (\n    <form\n      className='form-container'\n      onSubmit={handleSubmit}\n    >\n      <ul className='error-messages'>\n        {errors.map((error, index) => <li key={index}>{error}</li>)}\n      </ul>\n      <label>\n        Username or Email\n        <input\n          type='text'\n          value={credential}\n          onChange={e => setCredential(e.target.value)}\n          required\n        />\n      </label>\n      <label>\n        Password\n        <input\n          type='password'\n          value={password}\n          onChange={e => setPassword(e.target.value)}\n          required\n        />\n      </label>\n      <button\n        className='button'\n        type='submit'\n      >\n        Log in\n      </button>\n    </form>\n  );\n}\n\nexport function LoginFormModal() {\n  const dispatch = useDispatch();\n  const sessionUser = useSelector(state => state.session.user);\n  const [credential, setCredential] = useState('');\n  const [password, setPassword] = useState('');\n  const [errors, setErrors] = useState([]);\n  const [showForm, setShowForm] = useState(false);\n  const loginModalRef = useRef(null);\n  const submitButtonRef = useRef(null);\n  const history = useHistory();\n\n  \n  useEffect(() => {\n    // submitButtonRef.current.focus();\n  }, []);\n\n  // console.log(\"login\", history);\n  if (sessionUser) {\n    return <Redirect to='/' />;\n  }\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setErrors([]);\n\n    return dispatch(sessionActions.login({ credential, password }))\n      .then(res => {\n        if (loginModalRef.current)\n          loginModalRef.current.style.display = \"none\";\n        // history.go(2);\n      })\n      .catch(res => {\n        if (res.data && res.data.errors) setErrors(res.data.errors);\n      });\n  };\n\n  const handleCancelClick = e => {\n    e.preventDefault();\n    if (loginModalRef.current)\n      loginModalRef.current.style.display = \"none\";\n    history.push('/');\n  }\n\n  const handleSignupClick = e => {\n    e.preventDefault();\n    if (loginModalRef.current)\n      loginModalRef.current.style.display = \"none\";    \n    history.push('/signup');\n  }\n  const handleDemoClick = e => {\n    // e.preventDefault(); // no preventing default so we will login immediately\n    setCredential('Demo-user');\n    setPassword('password');\n  }\n\n  return (\n    <div className=\"modal\" ref={loginModalRef}>\n      <form\n        className='form-container modal-content'\n        onSubmit={handleSubmit}\n      >\n        <h3>Login to your account</h3>\n      \n        <ul className='error-messages'>\n          {errors.map((error, index) => <li key={index}>{error}</li>)}\n        </ul>\n        <div className=\"inputs-div\">\n          <div className=\"input-div\">\n            <label>Username or Email</label>\n            <input\n              className='input'\n              type='text'\n              value={credential}\n              onChange={e => setCredential(e.target.value)}\n              required\n              autoFocus={true}\n            />\n          </div>\n          <div className=\"input-div\">\n            <label>Password</label>\n            <input\n              className='input'\n              type='password'\n              value={password}\n              onChange={e => setPassword(e.target.value)}\n              required\n            />\n          </div>\n        </div>\n        <div className=\"buttons-div\">\n          <button\n            className='button'\n            type='submit'\n            ref={submitButtonRef}\n          >Log in</button>\n          <button\n            className='button button-Reset'\n            onClick={handleCancelClick}\n          > Cancel </button>\n        </div>\n        <div className=\"login-signup-invite\">\n          <span>Don't have an account?</span>\n          <span>\n            <button className=\"button button-invite\" onClick={handleSignupClick}>Sign up</button>\n          </span>\n          <span>\n            <button className=\"button button-invite\" onClick={handleDemoClick}>Demo</button>\n          </span>\n        </div>          \n      </form>\n    </div>\n  );\n}\nexport default LoginFormPage;","/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/components/Home/index.js",[],"/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/components/SignupFormPage/index.js",[],"/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/components/Navigation/index.js",[],"/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/components/Footer/index.js",[],"/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/components/Navigation/ProfileButton.js",[],"/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/components/Navigation/NotificationBell.js",["193"],"import React,{ useRef } from 'react';\nimport { useDispatch } from 'react-redux';\n\nexport default function NotificationBell({ user }) {\n  const dispatch = useDispatch();\n\n  const dropdownMenuRef = useRef(null);\n\n  function DropdownMenu() {\n    return (\n      <div className=\" dropdown-menu\" ref={dropdownMenuRef}>\n        <div className=\"dropdown-menu-item\">{user.username}</div>\n        <hr className=\"hr\" />\n        <div className=\"dropdown-menu-item\">{user.email}</div>\n      </div>\n    );\n  }\n  return (\n    <>\n      <span\n        className=\"dropdown-menu-parent\"\n      >\n        <button \n          className=\"fa fa-bell icon-span\" \n          style={{marginLeft: '15px'}}\n        />\n        {\n          <DropdownMenu />\n        }\n      </span>\n      <span \n        id=\"notification-number\"\n        className='notification-badge'\n      >9</span>\n    </>\n  );\n}\n","/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/components/Navigation/GithubLink.js",["194"],"import React,{ useRef } from 'react';\nimport { useDispatch } from 'react-redux';\n\nexport default function GithubLink({ user }) {\n  const dispatch = useDispatch();\n\n  const dropdownMenuRef = useRef(null);\n\n  function DropdownMenu() {\n    return (\n      <div className=\" dropdown-menu\" ref={dropdownMenuRef}>\n        <div className=\"dropdown-menu-item\">\n          <a className=\"github-a\" href='https://github.com/suasllc'>Tony Ngo</a>\n          </div>\n        <hr className=\"hr\" />\n        <div className=\"dropdown-menu-item\">\n          <a className=\"github-a\" href='https://github.com/suasllc/fullstack-authenticate-me'>Github Repo</a>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <>\n      <span\n        className=\"dropdown-menu-parent\"\n        style={{marginRight: '20px'}}\n      >\n        <button className=\"fab fa-github icon-span\" />\n        {\n          <DropdownMenu />\n        }\n      </span>\n    </>\n  );\n}\n","/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/components/GoogleMaps/index.js",["195","196","197"],"/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/store/spot.js",["198","199"],"// frontend/src/store/spot.js\n\nimport fetch from './csrf';\n\nconst SET_ONE_SPOT = 'session/SET_ONE_SPOT';\nconst REMOVE_ONE_SPOT = 'session/REMOVE_ONE_SPOT';\nconst SET_ALL_SPOTS = 'session/SET_ALL_SPOTS';\nconst REMOVE_ALL_SPOT = 'session/REMOVE_ALL_SPOT';\n\nconst setSpotPOJO = (spot) => ({\n  type: SET_ONE_SPOT,\n  spot\n});\nconst setAllSpotsPOJO = (spots) => ({\n  type: SET_ALL_SPOTS,\n  spots\n});\nconst removeSpotPOJO = () => ({\n  type: REMOVE_ONE_SPOT\n});\n\n\nexport const getOneSpot = (id) => async dispatch => {\n  const res = await fetch(`/api/spots/${id}`, {\n  }); //This fetch is a modified fetch, which already returns data after res.json()\n  if (res.ok) {\n    const fedback_spot = res.data.spot; //we need this user back from backend, NOT the provided\n    dispatch(setSpotPOJO(fedback_spot));\n  }\n  return res;\n}\n\nexport const getAllSpots = () => async dispatch => {\n  const res = await fetch(`/api/spots`, {\n  }); //This fetch is a modified fetch, which already returns data after res.json()\n  if (res.ok) {\n    const fedback_spots = res.data.spots; //we need this user back from backend, NOT the provided\n    dispatch(setAllSpotsPOJO(fedback_spots));\n  }\n  return res;\n}\n\nexport const createOneSpot = ({ spot }) => async dispatch => {\n  const res = await fetch(`/api/spots`, {\n    method: 'POST',\n    body: JSON.stringify({ spot })\n  }); //This fetch is a modified fetch, which already returns data after res.json()\n  if (res.ok) {\n    const fedback_spot = res.data.spot;\n    dispatch(setSpotPOJO(fedback_spot));\n  }\n  return res;\n}\n\n\nconst initialState = [];\n\nconst spotReducer = (state = initialState, action) => {\n  let newState;\n  switch (action.type) {\n    case SET_ONE_SPOT:\n      newState = JSON.parse(JSON.stringify(state));\n      newState.push(JSON.parse(JSON.stringify(action.spot)));\n      return newState;\n    case SET_ALL_SPOTS:\n      newState = JSON.parse(JSON.stringify([...state, ...action.spots]));\n      return newState;\n    default:\n      return state;\n  }\n};\n\nexport default spotReducer;","/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/components/Spot/index.js",["200","201","202"],"// frontend/src/components/Spot/index.js\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useHistory, Redirect } from 'react-router-dom';\nimport { nanoid } from 'nanoid';\n// import ReactPlayer from 'react-player/youtube'\n\nimport { MapWithMarkerClusterer } from '../GoogleMaps';\nimport Rating from '../Rating';\nimport BookingFormModal from '../BookingForm';\nimport UploadForm from '../UploadForm';\n\nimport * as spotActions from '../../store/spot';\n\nimport '../Forms.css';\nimport './Spot.css';\n\nexport function AllSpots({ searchTerm = null }) {\n  const reduxSpots = useSelector(state => state.spots);\n  const searchTerms = useSelector(state => state.searchs);\n  const history = useHistory();\n  const [showReviewForm, setShowReviewForm] = useState(false);\n  let spots;\n  let searchText;\n\n  // useEffect(() => {\n  if (searchTerms.length && searchTerms[searchTerms.length - 1]) {\n    spots = reduxSpots.filter(spot => {\n      searchText = searchTerms[searchTerms.length - 1].text.toLowerCase();\n      return spot.name.toLowerCase().includes(searchText)\n        || spot.description.toLowerCase().includes(searchText);\n    })\n    console.log('spots after filtered', spots, \"reduxSpots\", reduxSpots);\n  } else {\n    spots = reduxSpots;\n    searchText = undefined;\n  }\n  // }, [searchTerms]);\n\n  function handleBookNowClick(e) {\n    history.push(`/bookings/spots/${e.target.id.split('-')[0]}`);\n    // return <BookingFormModal spot={spot}/>\n  }\n  function handleReviewClick(e) {\n    setShowReviewForm(true)\n    history.push(`/reviews/spots/${e.target.id.split('-')[0]}`);\n  }\n\n  const highlightSearchText = (originalText, search) => {\n    if (!search || !originalText.toLowerCase().includes(search.toLowerCase())) return originalText;\n    const index = originalText.toLowerCase().indexOf(search.toLowerCase());\n    const firstPart = originalText.slice(0, index);\n    const searchedPart = originalText.slice(index, index + search.length);\n    const secondPart = originalText.slice(index + search.length);\n    console.log(\"partitions\", originalText, firstPart, searchedPart, secondPart);\n    return <>{firstPart}<b style={{ color: \"white\", backgroundColor: \"green\" }}>{searchedPart}</b>{secondPart}</>;\n  };\n\n  return (\n    <div className='spots-and-maps'>\n      <div className=\"spots-home-display-grid\">\n        {spots && spots.map(spot =>\n          <div key={nanoid()} >\n            <h6>{highlightSearchText(spot.name, searchText)}</h6>\n            <div className='spot-media-display'>\n              {spot.urls && spot.urls[0] && !spot.urls[0].toLowerCase().includes(\"youtu\") ?\n                <img key={spot.urls[0]} src={spot.urls[0]} alt={spot.name} className='spot-default-image' />\n                :\n                <></>\n              }\n              <div className=\"start-rating-on-top-of-image\">\n                <Rating rated={3 + (Math.random() * 2)} />\n              </div>\n            </div>\n            <div style={{ marginTop: '10px' }}>\n              <div className=\"buttons-and-address\">\n                <div className=\"book-and-more-div\">\n                  <button onClick={handleBookNowClick} id={spot.id + \"-\" + nanoid()}>Book Now</button>\n                  <button onClick={handleReviewClick} id={spot.id + \"-\" + nanoid()}>Review</button>\n                </div>\n                <div className='spot-address'>\n                  <p >\n                    {spot.streetAddress}\n                  </p>\n                  <p >\n                    {spot.city} {spot.stateProvince} {spot.zipCode} {spot.country}\n                  </p>\n                </div>\n              </div>\n              <p className='spot-description hide-scollbar'>\n                {highlightSearchText(spot.description, searchText)}\n              </p>\n            </div>\n          </div>\n        )}\n      </div>\n      <div className='home-side-map'>\n        {\n          spots && spots.length && <MapWithMarkerClusterer\n            center={{ lat: spots[0].gpsLocation[0], lng: spots[0].gpsLocation[1] }}\n            zoom={5}\n            spots={spots} />\n        }\n      </div>\n    </div>\n  );\n}\n\nexport function SpotFormModal() {\n  const dispatch = useDispatch();\n  const sessionUser = useSelector(state => state.session.user);\n  // const spots = useSelector(state => state.spots);\n  const media = useSelector(state => state.media);\n  const [name, setName] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [units, setUnits] = useState(1);\n  const [latitude, setLatitude] = useState(undefined);\n  const [longitude, setLongitude] = useState(undefined);\n  const [fullAddress, setFullAddress] = useState(\"\");\n  const [streetAddress, setStreetAddress] = useState(\"\");\n  const [city, setCity] = useState(\"\");\n  const [stateProvince, setStateProvince] = useState(\"\");\n  const [zipCode, setZipcode] = useState(undefined);\n  const [country, setCountry] = useState(\"\");\n  const [perNightRate, setPerNightRate] = useState(undefined);\n  const [accommodationType, setAccommodationType] = useState(undefined);\n  const [website, setWebsite] = useState(\"\");\n  const [showUploadForm, setShowUploadForm] = useState(false);\n  const [errors, setErrors] = useState([]);\n  const spotModalRef = useRef(undefined);\n  const history = useHistory();\n\n  useEffect(() => {\n    console.log(\"35 media\", media);\n  }, [media])\n\n  if (!sessionUser) {\n    if (spotModalRef.current)\n      spotModalRef.current.style.display = \"none\";\n    console.log('spot', history);\n    return <Redirect to='/login' />;\n  }\n\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setErrors([]);\n\n    console.log(\"handleSubmit media\", media, \" id\", media && media[media.length - 1].id);\n\n    return dispatch(spotActions.createOneSpot({\n      spot: {\n        userId: sessionUser.id,\n        name,\n        description,\n        units,\n        gpsLocation: [latitude, longitude],\n        mediaUrlIds: [media[media.length - 1].id],\n        streetAddress,\n        city,\n        stateProvince,\n        zipCode,\n        country,\n        perNightRate,\n        accommodationType,\n        website\n      }\n    }))\n      .then(res => {\n        if (spotModalRef.current)\n          spotModalRef.current.style.display = \"none\";\n        history.push('/');\n      })\n      .catch(res => {\n        if (res.data && res.data.errors) setErrors(res.data.errors);\n      });\n  };\n\n  const handleCancelClick = e => {\n    e.preventDefault();\n    if (spotModalRef.current)\n      spotModalRef.current.style.display = \"none\";\n    history.push('/');\n  }\n\n  const parseAddress = (textValue) => {\n    const values = textValue.split(',')\n    setStreetAddress(values[0]);\n    setCity(values[1]);\n    setStateProvince(values[2]);\n    setZipcode(values[3]);\n    setCountry(values[4]);\n    console.log(streetAddress, city, stateProvince, zipCode, country);\n  };\n\n  return (\n    <div className=\"modal\" ref={spotModalRef}\n    // onClick={e => { e.preventDefault(); if (showUploadForm) setShowUploadForm(false) }}\n    >\n      <form\n        className='form-container modal-content-spot-creation'\n        onSubmit={handleSubmit}\n      >\n        <h3>Create Your Spot</h3>\n\n        <ul className='error-messages'>\n          {errors.map((error, index) => <li key={nanoid()}>{error}</li>)}\n        </ul>\n        <div className=\"inputs-div\">\n          <div className=\"input-div\">\n            <label>Spot Name</label>\n            <input\n              className='input'\n              type='text'\n              value={name}\n              onChange={e => setName(e.target.value)}\n              required\n              autoFocus={true}\n            />\n          </div>\n          <div className=\"input-div\">\n            <label>Description</label>\n            <textarea\n              className='input'\n              type='text'\n              value={description}\n              onChange={e => setDescription(e.target.value)}\n              rows={10}\n              required\n            />\n          </div>\n          <div className=\"input-div\">\n            <label>Number of Units</label>\n            <input\n              className='input-number'\n              type='number'\n              value={units}\n              min={1}\n              onChange={e => setUnits(e.target.value)}\n              required\n            />\n          </div>\n          <div className=\"input-div-number\">\n            <label>GPS Location (Lat, Long)</label>\n            <div className=\"input-div\" style={{ paddingTop: '0px', paddingLeft: '5px' }}>\n              <input\n                className='input'\n                type='number'\n                min={-90}\n                max={90}\n                step={1e-14}\n                value={latitude}\n                onChange={e => {\n                  if (e.target.value < -90) e.target.value = -90;\n                  if (e.target.value > 90) e.target.value = 90;\n                  setLatitude(e.target.value)\n                }}\n                required\n              />\n              <input\n                className='input'\n                type='number'\n                min={-180}\n                max={180}\n                step={1e-14}\n                value={longitude}\n                onChange={e => {\n                  if (e.target.value < -180) e.target.value = -180;\n                  if (e.target.value > 180) e.target.value = 180;\n                  setLongitude(e.target.value)\n                }}\n                required\n              />\n            </div>\n          </div>\n          <div className=\"input-div\">\n            <label>Address (Street, City, State/Province, Zip Code, Country)</label>\n            <textarea\n              className='input'\n              type='text'\n              value={fullAddress}\n              onChange={e => { setFullAddress(e.target.value); parseAddress(e.target.value) }}\n              required\n              rows={3}\n              placeholder=\"Street address first line,&#10;City, State/Provice, Zipcode&#10;Country\"\n            />\n          </div>\n          <div className=\"input-div\">\n            <label>Rate Per Night ($USD)</label>\n            <input\n              className='input-number'\n              type='number'\n              value={perNightRate}\n              min={0}\n              onChange={e => setPerNightRate(e.target.value)}\n            />\n          </div>\n          <div className=\"input-div\">\n            <label>Accommodation Type</label>\n            <input\n              className='input-number'\n              type='number'\n              value={accommodationType}\n              min={0}\n              onChange={e => setAccommodationType(e.target.value)}\n            />\n          </div>\n          <div className=\"input-div\">\n            <label>External Website</label>\n            <input\n              className='input'\n              type='text'\n              value={website}\n              min={0}\n              onChange={e => setWebsite(e.target.value)}\n            />\n          </div>\n          <div className=\"input-div\">\n            <button\n              className='button button-small button-Send'\n              onClick={e => { e.preventDefault(); setShowUploadForm(!showUploadForm) }}\n            >Upload Pic/Vid</button>\n            {\n              showUploadForm && <UploadForm\n                link=\"official/spots\"\n                divClass=\"side-modal\"\n                redirectHome={false}\n                displayed=\"block\"\n              />\n            }\n          </div>\n        </div>\n        <div className=\"buttons-div\">\n          <button\n            className='button'\n            type='submit'\n          >Submit</button>\n          <button\n            className='button button-Reset'\n            onClick={handleCancelClick}\n          > Cancel </button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default function Spot() {\n  const dispatch = useDispatch();\n  const spots = useSelector(state => state.spots);\n  return (\n    <div>\n      {spots && spots.map(spot =>\n        <div key={spot.name}>\n          <h3>{spot.name}</h3>\n          <div className='spot-media-display'>\n            {spot.urls && spot.urls.map(url =>\n              url.toLowerCase().includes(\"youtu\") ?\n                // <ReactPlayer\n                //   url={url}\n                //   width='400px'\n                //   height='225px'\n                //   controls={true}\n                //   key={url}\n                // />\n                <></>\n                :\n                <img key={url} src={url} alt={spot.name} className='media-display' />\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}","/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/components/UploadForm/index.js",[],"/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/components/Home/Banner/index.js",["203","204","205","206","207"],"/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/components/Rating/index.js",["208"],"import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { nanoid } from 'nanoid';\n\nimport { setRatingPOJO } from '../../store/rating';\n\nimport './Rating.css';\n\nexport default function Rating({ rated = 0, userChangeable = false }) {\n  const [trialRating, setTrialRating] = useState(rated);\n  const [rating, setRating] = useState(rated);\n  let arrayOf5 = new Array(5).fill(1);\n  const dispatch = useDispatch();\n  const ratings = useSelector(state => state.ratings);\n\n  if (!userChangeable) {\n    const ratatedWholeNumber = Math.floor(rated);\n    const ratedDecimal = rated - ratatedWholeNumber;\n    return (\n      <div>\n        {\n          arrayOf5.map((el, i) => {\n            return <span\n              className={i < ratatedWholeNumber ?\n                \"fa fa-star checked star-set-font-size\"\n                : (ratedDecimal > 0 && i < ratatedWholeNumber + 1 ? \"fas fa-star-half-alt star-set-font-size checked\" : \"far fa-star star-set-font-size\")\n              }\n              key={nanoid()}\n              id={(i + 1) + \"-\" + nanoid()}\n              onClick={onStarClicked}\n            />\n          })\n        }\n        <span className=\"star-set-font-size\">{rated.toFixed(1)}</span>\n      </div>\n    );\n  }\n\n  function onMouseOver(e) {\n    const id = e.target.id.split(\"-\")[0];\n    setTrialRating(Number(id));\n  }\n  function onMouseLeave() {\n    setTrialRating(rating);\n  }\n\n  function onStarClicked(e) {\n    const ratingNumber = Number(e.target.id.split(\"-\")[0]);\n    setRating(ratingNumber);\n    setTrialRating(ratingNumber)\n    dispatch(setRatingPOJO(ratingNumber));\n  }\n\n  return (\n    <div onMouseOver={onMouseOver} onMouseLeave={onMouseLeave}>\n      <span id={0 + \"-\" + nanoid()} onClick={onStarClicked} className=\"far fa-star star-set-font-size\" style={{ color: \"rgba(0,0,0,0)\" }}> </span>\n      { arrayOf5.map((el, i) => <span\n        className={i < trialRating ? \"fa fa-star checked star-set-font-size\" : \"far fa-star star-set-font-size\"}\n        key={nanoid()}\n        id={(i + 1) + \"-\" + nanoid()}\n        onClick={onStarClicked}\n      />\n      )}\n      <span className=\"far fa-star star-set-font-size\" style={{ color: \"rgba(0,0,0,0)\" }}>{ }</span>\n    </div>\n  );\n}","/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/store/booking.js",["209"],"// frontend/src/store/booking.js\n\nimport fetch from './csrf';\n\nconst SET_ONE_BOOKING = 'session/SET_ONE_BOOKING';\nconst SET_ALL_BOOKINGS = 'session/SET_ALL_BOOKINGS';\nconst REMOVE_ONE_BOOKING = 'session/REMOVE_ONE_BOOKING';\n\nconst setBookingPOJO = (booking) => ({\n  type: SET_ONE_BOOKING,\n  booking\n});\nconst setAllBookingsPOJO = (bookings) => ({\n  type: SET_ALL_BOOKINGS,\n  bookings\n});\nconst removeBookingPOJO = () => ({\n  type: REMOVE_ONE_BOOKING\n});\n\n\nexport const getOneBooking = (id) => async dispatch => {\n  const res = await fetch(`/api/bookings/${id}`, {\n  }); //This fetch is a modified fetch, which already returns data after res.json()\n  if (res.ok) {\n    const fedback_booking = res.data.booking; //we need this user back from backend, NOT the provided\n    dispatch(setBookingPOJO(fedback_booking));\n  }\n  return res;\n}\n\nexport const getAllBookings = () => async dispatch => {\n  const res = await fetch(`/api/bookings`, {\n  }); //This fetch is a modified fetch, which already returns data after res.json()\n  if (res.ok) {\n    const fedback_bookings = res.data.bookings; //we need this user back from backend, NOT the provided\n    dispatch(setAllBookingsPOJO(fedback_bookings));\n  }\n  return res;\n}\nexport const createOneBooking = ({ booking }) => async dispatch => {\n  const res = await fetch(`/api/bookings`, {\n    method: 'POST',\n    body: JSON.stringify({ booking })\n  }); //This fetch is a modified fetch, which already returns data after res.json()\n  if (res.ok) {\n    const fedback_booking = res.data.booking;\n    dispatch(setBookingPOJO(fedback_booking));\n  }\n  return res;\n}\n\nconst initialState = [];\n\nconst bookingReducer = (state = initialState, action) => {\n  let newState;\n  switch (action.type) {\n    case SET_ONE_BOOKING:\n      newState = JSON.parse(JSON.stringify(state));\n      newState.push(JSON.parse(JSON.stringify(action.booking)));\n      return newState;\n    case SET_ALL_BOOKINGS:\n      newState = JSON.parse(JSON.stringify([...state, ...action.bookings]));\n      return newState;\n    default:\n      return state;\n  }\n};\n\nexport default bookingReducer;","/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/store/review.js",["210","211"],"// frontend/src/store/review.js\n\nimport fetch from './csrf';\n\nconst SET_ONE_REVIEW = 'session/SET_ONE_REVIEW';\nconst REMOVE_ONE_REVIEW = 'session/REMOVE_ONE_REVIEW';\nconst SET_ALL_REVIEWS = 'session/SET_ALL_REVIEWS';\nconst REMOVE_ALL_REVIEW = 'session/REMOVE_ALL_REVIEW';\n\nconst setReviewPOJO = (review) => ({\n  type: SET_ONE_REVIEW,\n  review\n});\nconst setAllReviewsPOJO = (reviews) => ({\n  type: SET_ALL_REVIEWS,\n  reviews\n});\nconst removeReviewPOJO = () => ({\n  type: REMOVE_ONE_REVIEW\n});\n\n\nexport const getOneReview = (id) => async dispatch => {\n  const res = await fetch(`/api/reviews/${id}`, {\n  }); //This fetch is a modified fetch, which already returns data after res.json()\n  if (res.ok) {\n    const fedback_review = res.data.review; //we need this user back from backend, NOT the provided\n    dispatch(setReviewPOJO(fedback_review));\n  }\n  return res;\n}\n\nexport const getAllReviews = () => async dispatch => {\n  const res = await fetch(`/api/reviews`, {\n  }); //This fetch is a modified fetch, which already returns data after res.json()\n  if (res.ok) {\n    const fedback_reviews = res.data.reviews; //we need this user back from backend, NOT the provided\n    dispatch(setAllReviewsPOJO(fedback_reviews));\n  }\n  return res;\n}\n\nexport const createOneReview = ({ review }) => async dispatch => {\n  const res = await fetch(`/api/reviews`, {\n    method: 'POST',\n    body: JSON.stringify({ review })\n  }); //This fetch is a modified fetch, which already returns data after res.json()\n  if (res.ok) {\n    const fedback_review = res.data.review;\n    dispatch(setReviewPOJO(fedback_review));\n  }\n  return res;\n}\n\nconst initialState = [];\n\nconst reviewReducer = (state = initialState, action) => {\n  let newState;\n  switch (action.type) {\n    case SET_ONE_REVIEW:\n      newState = JSON.parse(JSON.stringify(state));\n      newState.push(JSON.parse(JSON.stringify(action.review)));\n      return newState;\n    case SET_ALL_REVIEWS:\n      newState = JSON.parse(JSON.stringify([...state, ...action.reviews]));\n      return newState;\n    default:\n      return state;\n  }\n};\n\nexport default reviewReducer;","/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/components/BookingForm/index.js",["212","213"],"// frontend/src/components/BookingForm/index.js\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Redirect, useHistory, useParams } from 'react-router-dom';\n\nimport * as sessionActions from '../../store/session';\nimport * as bookingActions from '../../store/booking';\n\nimport '../Forms.css';\n\nexport default function BookingFormModal() {\n  const dispatch = useDispatch();\n  const sessionUser = useSelector(state => state.session.user);\n  const spots = useSelector(state => state.spots);\n  const [startDate, setStartDate] = useState(null);\n  const [endDate, setEndDate] = useState(null);\n  const [numberOfGuests, setNumberOfGuests] = useState(1);\n  const [specialRequest, setSpecialRequest] = useState(\"\");\n  const [errors, setErrors] = useState([]);\n  const bookingModalRef = useRef(null);\n  const history = useHistory();\n  const params = useParams();\n\n  if (!sessionUser) {\n    if (bookingModalRef.current)\n      bookingModalRef.current.style.display = \"none\";\n    console.log('booking', history);\n    return <Redirect to='/login' />;\n  }\n\n  let spot;\n  let spotInfo = <></>;\n\n  //TODO: make this useEffect work so it won't reload spot data everytime user types a key\n  // useEffect(() => {\n  if (params && spots) spot = spots.find(spot => spot.id === Number(params.spotId));\n  // console.log(\"spot\", spot, params);\n  spotInfo = spot && <>\n    <p>Spot:</p>\n    <p>{spot.name}</p>\n    <p>{spot.streetAddress}</p>\n  </>\n  // });\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setErrors([]);\n\n    return dispatch(bookingActions.createOneBooking({\n      booking: {\n        userId: sessionUser.id,\n        spotId: spot.id,\n        startDate,\n        endDate,\n        guests: numberOfGuests,\n        specialRequest\n      }\n    }))\n      .then(res => {\n        if (bookingModalRef.current)\n          bookingModalRef.current.style.display = \"none\";\n        history.push('/');\n      })\n      .catch(res => {\n        if (res.data && res.data.errors) setErrors(res.data.errors);\n      });\n  };\n\n  const handleCancelClick = e => {\n    e.preventDefault();\n    if (bookingModalRef.current)\n      bookingModalRef.current.style.display = \"none\";\n    history.push('/');\n  }\n\n  return (\n    <div className=\"modal\" ref={bookingModalRef}>\n      <form\n        className='form-container modal-content'\n        onSubmit={handleSubmit}\n      >\n        <h3>Booking Form</h3>\n        <div>\n          {\n            spotInfo\n          }\n        </div>\n        <ul className='error-messages'>\n          {errors.map((error, index) => <li key={index}>{error}</li>)}\n        </ul>\n        <div className=\"inputs-div\">\n          <div className=\"input-div\">\n            <label>Start Date</label>\n            <input\n              className='input-date'\n              type='date'\n              value={startDate}\n              onChange={e => setStartDate(e.target.value)}\n              required\n            />\n          </div>\n          <div className=\"input-div\">\n            <label>End Date</label>\n            <input\n              className='input-date'\n              type='date'\n              value={endDate}\n              onChange={e => setEndDate(e.target.value)}\n              required\n            />\n          </div>\n          <div className=\"input-div\">\n            <label>Number of Guests</label>\n            <input\n              className='input-number'\n              type='number'\n              value={numberOfGuests}\n              min={1}\n              onChange={e => setNumberOfGuests(e.target.value)}\n              required\n            />\n          </div>\n          <div className=\"input-div\">\n            <label>Special Request</label>\n            <textarea\n              className='input'\n              type='text'\n              value={specialRequest}\n              onChange={e => setSpecialRequest(e.target.value)}\n              // required // this is NOT required\n            />\n          </div>\n        </div>\n        <div className=\"buttons-div\">\n          <button\n            className='button'\n            type='submit'\n          >Submit</button>\n          <button\n            className='button button-Reset'\n            onClick={handleCancelClick}\n          > Cancel </button>\n        </div>\n      </form>\n    </div>\n  );\n}\n","/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/components/ReviewForm/index.js",["214","215","216","217"],"/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/store/rating.js",[],"/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/store/media.js",["218"],"// frontend/src/store/media.js\n\nimport fetch from './csrf';\n\nconst SET_ONE_MEDIUM = 'session/SET_ONE_MEDIUM';\nconst SET_ALL_MEDIA = 'session/SET_ALL_MEDIA';\nconst REMOVE_ONE_MEDIUM = 'session/REMOVE_ONE_MEDIUM';\n\nconst setMediumPOJO = (medium) => ({\n  type: SET_ONE_MEDIUM,\n  medium\n});\nconst setAllMediaPOJO = (media) => ({\n  type: SET_ALL_MEDIA,\n  media\n});\nconst removeMediumPOJO = () => ({\n  type: REMOVE_ONE_MEDIUM\n});\n\n\nexport const getOneMedium = (id) => async dispatch => {\n  const res = await fetch(`/api/media/${id}`, {\n  }); //This fetch is a modified fetch, which already returns data after res.json()\n  if (res.ok) {\n    const fedback_medium = res.data.medium; //we need this user back from backend, NOT the provided\n    dispatch(setMediumPOJO(fedback_medium));\n  }\n  return res;\n}\n\nexport const getAllMedia = () => async dispatch => {\n  const res = await fetch(`/api/media`, {\n  }); //This fetch is a modified fetch, which already returns data after res.json()\n  if (res.ok) {\n    const fedback_media = res.data.media; //we need this user back from backend, NOT the provided\n    dispatch(setAllMediaPOJO(fedback_media));\n  }\n  return res;\n}\nexport const createOneMedium = ({ medium }) => async dispatch => {\n  const res = await fetch(`/api/media`, {\n    method: 'POST',\n    body: JSON.stringify({ medium })\n  }); //This fetch is a modified fetch, which already returns data after res.json()\n  if (res.ok) {\n    const fedback_medium = res.data.medium;\n    dispatch(setMediumPOJO(fedback_medium));\n  }\n  return res;\n}\n\nconst initialState = [];\n\nconst mediumReducer = (state = initialState, action) => {\n  let newState;\n  switch (action.type) {\n    case SET_ONE_MEDIUM:\n      newState = JSON.parse(JSON.stringify(state));\n      newState.push(JSON.parse(JSON.stringify(action.medium)));\n      return newState;\n    case SET_ALL_MEDIA:\n      newState = JSON.parse(JSON.stringify([...state, ...action.media]));\n      return newState;\n    default:\n      return state;\n  }\n};\n\nexport default mediumReducer;","/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/components/Search/index.js",[],"/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/store/search.js",[],{"ruleId":"219","replacedBy":"220"},{"ruleId":"221","replacedBy":"222"},{"ruleId":"223","severity":1,"message":"224","line":2,"column":25,"nodeType":"225","messageId":"226","endLine":2,"endColumn":33},{"ruleId":"223","severity":1,"message":"227","line":73,"column":10,"nodeType":"225","messageId":"226","endLine":73,"endColumn":18},{"ruleId":"223","severity":1,"message":"228","line":73,"column":20,"nodeType":"225","messageId":"226","endLine":73,"endColumn":31},{"ruleId":"223","severity":1,"message":"229","line":5,"column":9,"nodeType":"225","messageId":"226","endLine":5,"endColumn":17},{"ruleId":"223","severity":1,"message":"229","line":5,"column":9,"nodeType":"225","messageId":"226","endLine":5,"endColumn":17},{"ruleId":"223","severity":1,"message":"230","line":36,"column":10,"nodeType":"225","messageId":"226","endLine":36,"endColumn":13},{"ruleId":"223","severity":1,"message":"231","line":1,"column":8,"nodeType":"225","messageId":"226","endLine":1,"endColumn":20},{"ruleId":"219","replacedBy":"232"},{"ruleId":"221","replacedBy":"233"},{"ruleId":"223","severity":1,"message":"224","line":2,"column":25,"nodeType":"225","messageId":"226","endLine":2,"endColumn":33},{"ruleId":"223","severity":1,"message":"227","line":73,"column":10,"nodeType":"225","messageId":"226","endLine":73,"endColumn":18},{"ruleId":"223","severity":1,"message":"228","line":73,"column":20,"nodeType":"225","messageId":"226","endLine":73,"endColumn":31},{"ruleId":"223","severity":1,"message":"229","line":5,"column":9,"nodeType":"225","messageId":"226","endLine":5,"endColumn":17},{"ruleId":"223","severity":1,"message":"229","line":5,"column":9,"nodeType":"225","messageId":"226","endLine":5,"endColumn":17},{"ruleId":"223","severity":1,"message":"234","line":13,"column":7,"nodeType":"225","messageId":"226","endLine":13,"endColumn":23},{"ruleId":"223","severity":1,"message":"230","line":33,"column":10,"nodeType":"225","messageId":"226","endLine":33,"endColumn":13},{"ruleId":"235","severity":1,"message":"236","line":86,"column":6,"nodeType":"237","endLine":86,"endColumn":45,"suggestions":"238"},{"ruleId":"223","severity":1,"message":"239","line":8,"column":7,"nodeType":"225","messageId":"226","endLine":8,"endColumn":22},{"ruleId":"223","severity":1,"message":"240","line":18,"column":7,"nodeType":"225","messageId":"226","endLine":18,"endColumn":21},{"ruleId":"223","severity":1,"message":"241","line":11,"column":8,"nodeType":"225","messageId":"226","endLine":11,"endColumn":24},{"ruleId":"223","severity":1,"message":"242","line":23,"column":10,"nodeType":"225","messageId":"226","endLine":23,"endColumn":24},{"ruleId":"223","severity":1,"message":"229","line":350,"column":9,"nodeType":"225","messageId":"226","endLine":350,"endColumn":17},{"ruleId":"243","severity":1,"message":"244","line":27,"column":7,"nodeType":"245","endLine":27,"endColumn":118},{"ruleId":"243","severity":1,"message":"244","line":28,"column":7,"nodeType":"245","endLine":28,"endColumn":118},{"ruleId":"243","severity":1,"message":"244","line":29,"column":7,"nodeType":"245","endLine":29,"endColumn":118},{"ruleId":"243","severity":1,"message":"244","line":30,"column":7,"nodeType":"245","endLine":30,"endColumn":118},{"ruleId":"243","severity":1,"message":"244","line":31,"column":7,"nodeType":"245","endLine":31,"endColumn":118},{"ruleId":"223","severity":1,"message":"246","line":14,"column":9,"nodeType":"225","messageId":"226","endLine":14,"endColumn":16},{"ruleId":"223","severity":1,"message":"247","line":17,"column":7,"nodeType":"225","messageId":"226","endLine":17,"endColumn":24},{"ruleId":"223","severity":1,"message":"248","line":8,"column":7,"nodeType":"225","messageId":"226","endLine":8,"endColumn":24},{"ruleId":"223","severity":1,"message":"249","line":18,"column":7,"nodeType":"225","messageId":"226","endLine":18,"endColumn":23},{"ruleId":"223","severity":1,"message":"250","line":3,"column":35,"nodeType":"225","messageId":"226","endLine":3,"endColumn":44},{"ruleId":"223","severity":1,"message":"251","line":7,"column":13,"nodeType":"225","messageId":"226","endLine":7,"endColumn":27},{"ruleId":"223","severity":1,"message":"251","line":7,"column":13,"nodeType":"225","messageId":"226","endLine":7,"endColumn":27},{"ruleId":"223","severity":1,"message":"252","line":26,"column":10,"nodeType":"225","messageId":"226","endLine":26,"endColumn":16},{"ruleId":"235","severity":1,"message":"253","line":31,"column":22,"nodeType":"254","endLine":31,"endColumn":49},{"ruleId":"235","severity":1,"message":"253","line":39,"column":24,"nodeType":"225","endLine":39,"endColumn":33},{"ruleId":"223","severity":1,"message":"255","line":17,"column":7,"nodeType":"225","messageId":"226","endLine":17,"endColumn":23},"no-native-reassign",["256"],"no-negated-in-lhs",["257"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'showForm' is assigned a value but never used.","'setShowForm' is assigned a value but never used.","'dispatch' is assigned a value but never used.","'map' is assigned a value but never used.","'MapComponent' is defined but never used.",["256"],["257"],"'defaultLocations' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has unnecessary dependencies: 'window.innerHeight' and 'window.innerWidth'. Either exclude them or remove the dependency array. Outer scope values like 'window.innerWidth' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["258"],"'REMOVE_ALL_SPOT' is assigned a value but never used.","'removeSpotPOJO' is assigned a value but never used.","'BookingFormModal' is defined but never used.","'showReviewForm' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'ratings' is assigned a value but never used.","'removeBookingPOJO' is assigned a value but never used.","'REMOVE_ALL_REVIEW' is assigned a value but never used.","'removeReviewPOJO' is assigned a value but never used.","'useEffect' is defined but never used.","'sessionActions' is defined but never used.","'rating' is assigned a value but never used.","Assignments to the 'realtimeRating' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","MemberExpression","'removeMediumPOJO' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"259","fix":"260"},"Update the dependencies array to be: []",{"range":"261","text":"262"},[2275,2314],"[]"]