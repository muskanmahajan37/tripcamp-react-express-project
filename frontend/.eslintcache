[{"/home/tony/appacademy/first_solo_project/authenticate-me/frontend/src/index.js":"1","/home/tony/appacademy/first_solo_project/authenticate-me/frontend/src/App.js":"2","/home/tony/appacademy/first_solo_project/authenticate-me/frontend/src/store/index.js":"3","/home/tony/appacademy/first_solo_project/authenticate-me/frontend/src/store/csrf.js":"4","/home/tony/appacademy/first_solo_project/authenticate-me/frontend/src/store/session.js":"5","/home/tony/appacademy/first_solo_project/authenticate-me/frontend/src/components/LoginFormPage/index.js":"6","/home/tony/appacademy/first_solo_project/authenticate-me/frontend/src/components/SignupFormPage/index.js":"7","/home/tony/appacademy/first_solo_project/authenticate-me/frontend/src/components/Navigation/index.js":"8","/home/tony/appacademy/first_solo_project/authenticate-me/frontend/src/components/Navigation/ProfileButton.js":"9","/home/tony/appacademy/first_solo_project/authenticate-me/frontend/src/components/Navigation/NotificationBell.js":"10","/home/tony/appacademy/first_solo_project/authenticate-me/frontend/src/components/Navigation/GithubLink.js":"11","/home/tony/appacademy/first_solo_project/authenticate-me/frontend/src/components/GoogleMaps/index.js":"12","/home/tony/appacademy/first_solo_project/authenticate-me/frontend/src/components/Home/index.js":"13","/home/tony/appacademy/first_solo_project/authenticate-me/frontend/src/components/Footer/index.js":"14","/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/index.js":"15","/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/App.js":"16","/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/store/csrf.js":"17","/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/store/session.js":"18","/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/store/index.js":"19","/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/components/LoginFormPage/index.js":"20","/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/components/Home/index.js":"21","/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/components/SignupFormPage/index.js":"22","/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/components/Navigation/index.js":"23","/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/components/Footer/index.js":"24","/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/components/Navigation/ProfileButton.js":"25","/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/components/Navigation/NotificationBell.js":"26","/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/components/Navigation/GithubLink.js":"27","/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/components/GoogleMaps/index.js":"28","/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/store/spot.js":"29","/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/components/Spot/index.js":"30","/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/components/UploadForm/index.js":"31","/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/components/Home/Banner/index.js":"32","/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/components/Rating/index.js":"33","/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/store/booking.js":"34","/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/store/review.js":"35","/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/components/BookingForm/index.js":"36","/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/components/ReviewForm/index.js":"37","/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/store/rating.js":"38","/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/store/media.js":"39"},{"size":814,"mtime":1608239934289,"results":"40","hashOfConfig":"41"},{"size":1163,"mtime":1608666968802,"results":"42","hashOfConfig":"41"},{"size":735,"mtime":1608240273227,"results":"43","hashOfConfig":"41"},{"size":1587,"mtime":1608241502124,"results":"44","hashOfConfig":"41"},{"size":2327,"mtime":1608258969336,"results":"45","hashOfConfig":"41"},{"size":4001,"mtime":1608333821017,"results":"46","hashOfConfig":"41"},{"size":5374,"mtime":1608333935846,"results":"47","hashOfConfig":"41"},{"size":739,"mtime":1608668384846,"results":"48","hashOfConfig":"41"},{"size":2224,"mtime":1608668080454,"results":"49","hashOfConfig":"41"},{"size":863,"mtime":1608668108053,"results":"50","hashOfConfig":"41"},{"size":923,"mtime":1608666415055,"results":"51","hashOfConfig":"41"},{"size":2579,"mtime":1608663850348,"results":"52","hashOfConfig":"41"},{"size":235,"mtime":1608665000243,"results":"53","hashOfConfig":"41"},{"size":329,"mtime":1608665907898,"results":"54","hashOfConfig":"41"},{"size":814,"mtime":1608737851036,"results":"55","hashOfConfig":"56"},{"size":1765,"mtime":1609265750155,"results":"57","hashOfConfig":"56"},{"size":1587,"mtime":1608737851054,"results":"58","hashOfConfig":"56"},{"size":2327,"mtime":1608737851056,"results":"59","hashOfConfig":"56"},{"size":1048,"mtime":1609277407214,"results":"60","hashOfConfig":"56"},{"size":4929,"mtime":1609264278772,"results":"61","hashOfConfig":"56"},{"size":631,"mtime":1609171136945,"results":"62","hashOfConfig":"56"},{"size":5824,"mtime":1609264296547,"results":"63","hashOfConfig":"56"},{"size":739,"mtime":1608737851051,"results":"64","hashOfConfig":"56"},{"size":329,"mtime":1608737851042,"results":"65","hashOfConfig":"56"},{"size":2691,"mtime":1609266075315,"results":"66","hashOfConfig":"56"},{"size":863,"mtime":1608737851047,"results":"67","hashOfConfig":"56"},{"size":923,"mtime":1608737851049,"results":"68","hashOfConfig":"56"},{"size":3542,"mtime":1609284456908,"results":"69","hashOfConfig":"56"},{"size":2011,"mtime":1609274872486,"results":"70","hashOfConfig":"56"},{"size":11414,"mtime":1609284195922,"results":"71","hashOfConfig":"56"},{"size":4012,"mtime":1609280899659,"results":"72","hashOfConfig":"56"},{"size":1158,"mtime":1609171171386,"results":"73","hashOfConfig":"56"},{"size":2220,"mtime":1609256822444,"results":"74","hashOfConfig":"56"},{"size":2087,"mtime":1609210147159,"results":"75","hashOfConfig":"56"},{"size":2100,"mtime":1609252361991,"results":"76","hashOfConfig":"56"},{"size":4300,"mtime":1609254809276,"results":"77","hashOfConfig":"56"},{"size":5444,"mtime":1609269478439,"results":"78","hashOfConfig":"56"},{"size":571,"mtime":1609255712850,"results":"79","hashOfConfig":"56"},{"size":2011,"mtime":1609277362038,"results":"80","hashOfConfig":"56"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},"1tu2129",{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},"1uhg24e",{"filePath":"113","messages":"114","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"112"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"112"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"112"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"112"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"112"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"112"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"112"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"112"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"156"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"112"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"112"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"112"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"112"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"112"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"112"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"112"},"/home/tony/appacademy/first_solo_project/authenticate-me/frontend/src/index.js",[],["178","179"],"/home/tony/appacademy/first_solo_project/authenticate-me/frontend/src/App.js",["180"],"/home/tony/appacademy/first_solo_project/authenticate-me/frontend/src/store/index.js",[],"/home/tony/appacademy/first_solo_project/authenticate-me/frontend/src/store/csrf.js",[],"/home/tony/appacademy/first_solo_project/authenticate-me/frontend/src/store/session.js",[],"/home/tony/appacademy/first_solo_project/authenticate-me/frontend/src/components/LoginFormPage/index.js",["181","182"],"/home/tony/appacademy/first_solo_project/authenticate-me/frontend/src/components/SignupFormPage/index.js",[],"/home/tony/appacademy/first_solo_project/authenticate-me/frontend/src/components/Navigation/index.js",[],"/home/tony/appacademy/first_solo_project/authenticate-me/frontend/src/components/Navigation/ProfileButton.js",[],"/home/tony/appacademy/first_solo_project/authenticate-me/frontend/src/components/Navigation/NotificationBell.js",["183"],"/home/tony/appacademy/first_solo_project/authenticate-me/frontend/src/components/Navigation/GithubLink.js",["184"],"/home/tony/appacademy/first_solo_project/authenticate-me/frontend/src/components/GoogleMaps/index.js",["185"],"/home/tony/appacademy/first_solo_project/authenticate-me/frontend/src/components/Home/index.js",["186"],"/home/tony/appacademy/first_solo_project/authenticate-me/frontend/src/components/Footer/index.js",[],"/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/index.js",[],["187","188"],"/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/App.js",["189","190"],"import React, { useEffect, useState } from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { LoginFormModal } from './components/LoginFormPage';\nimport { SignupFormModal } from './components/SignupFormPage';\nimport { SpotFormModal } from './components/Spot';\nimport BookingFormModal from './components/BookingForm';\nimport ReviewFormModal from './components/ReviewForm';\nimport Navigation from './components/Navigation';\nimport Home from './components/Home';\nimport Footer from './components/Footer';\n\nimport * as sessionActions from \"./store/session\";\nimport * as spotActions from './store/spot';\nimport * as bookingActions from './store/booking';\n\nfunction App() {\n  const [isLoaded, setIsLoaded] = useState(false);\n  const dispatch = useDispatch();\n  const sessionUser = useSelector(state => state.session.user);\n  console.log(sessionUser);\n\n  useEffect(() => {\n    dispatch(spotActions.getAllSpots());\n  }, [dispatch]);\n\n  useEffect(() => {\n    dispatch(sessionActions.restoreUser()).then(() => setIsLoaded(true));\n  }, [dispatch]);\n\n  return isLoaded && (\n    <div className='mainbody'>\n      <Navigation />\n      <Home />\n      <Switch>\n        <Route exact path='/'>\n        </Route>\n        <Route path='/login'>\n          <LoginFormModal />\n        </Route>\n        <Route path='/signup'>\n          <SignupFormModal />\n        </Route>\n        <Route path='/spots'>\n          <SpotFormModal />\n        </Route>\n        <Route path='/bookings/spots/:spotId'>\n          <BookingFormModal />\n        </Route>\n        <Route path='/reviews/spots/:spotId'>\n          <ReviewFormModal />\n        </Route>\n      </Switch>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/store/csrf.js",[],"/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/store/session.js",[],"/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/store/index.js",[],"/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/components/LoginFormPage/index.js",["191","192"],"// frontend/src/components/LoginFormPage/index.js\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Redirect, useHistory } from 'react-router-dom';\n\nimport * as sessionActions from '../../store/session';\n\nimport '../Forms.css';\n\nfunction LoginFormPage() {\n  const dispatch = useDispatch();\n  const sessionUser = useSelector(state => state.session.user);\n  const [credential, setCredential] = useState('');\n  const [password, setPassword] = useState('');\n  const [errors, setErrors] = useState([]);\n\n  if (sessionUser) {\n    return <Redirect to='/' />;\n  }\n\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setErrors([]);\n    return dispatch(sessionActions.login({ credential, password }))\n      .catch(res => {\n        if (res.data && res.data.errors) setErrors(res.data.errors);\n      });\n  };\n  return (\n    <form\n      className='form-container'\n      onSubmit={handleSubmit}\n    >\n      <ul className='error-messages'>\n        {errors.map((error, index) => <li key={index}>{error}</li>)}\n      </ul>\n      <label>\n        Username or Email\n        <input\n          type='text'\n          value={credential}\n          onChange={e => setCredential(e.target.value)}\n          required\n        />\n      </label>\n      <label>\n        Password\n        <input\n          type='password'\n          value={password}\n          onChange={e => setPassword(e.target.value)}\n          required\n        />\n      </label>\n      <button\n        className='button'\n        type='submit'\n      >\n        Log in\n      </button>\n    </form>\n  );\n}\n\nexport function LoginFormModal() {\n  const dispatch = useDispatch();\n  const sessionUser = useSelector(state => state.session.user);\n  const [credential, setCredential] = useState('');\n  const [password, setPassword] = useState('');\n  const [errors, setErrors] = useState([]);\n  const [showForm, setShowForm] = useState(false);\n  const loginModalRef = useRef(null);\n  const submitButtonRef = useRef(null);\n  const history = useHistory();\n\n  \n  useEffect(() => {\n    // submitButtonRef.current.focus();\n  }, []);\n\n  // console.log(\"login\", history);\n  if (sessionUser) {\n    return <Redirect to='/' />;\n  }\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setErrors([]);\n\n    return dispatch(sessionActions.login({ credential, password }))\n      .then(res => {\n        if (loginModalRef.current)\n          loginModalRef.current.style.display = \"none\";\n        // history.go(2);\n      })\n      .catch(res => {\n        if (res.data && res.data.errors) setErrors(res.data.errors);\n      });\n  };\n\n  const handleCancelClick = e => {\n    e.preventDefault();\n    if (loginModalRef.current)\n      loginModalRef.current.style.display = \"none\";\n    history.push('/');\n  }\n\n  const handleSignupClick = e => {\n    e.preventDefault();\n    if (loginModalRef.current)\n      loginModalRef.current.style.display = \"none\";    \n    history.push('/signup');\n  }\n  const handleDemoClick = e => {\n    // e.preventDefault(); // no preventing default so we will login immediately\n    setCredential('Demo-user');\n    setPassword('password');\n  }\n\n  return (\n    <div className=\"modal\" ref={loginModalRef}>\n      <form\n        className='form-container modal-content'\n        onSubmit={handleSubmit}\n      >\n        <h3>Login to your account</h3>\n      \n        <ul className='error-messages'>\n          {errors.map((error, index) => <li key={index}>{error}</li>)}\n        </ul>\n        <div className=\"inputs-div\">\n          <div className=\"input-div\">\n            <label>Username or Email</label>\n            <input\n              className='input'\n              type='text'\n              value={credential}\n              onChange={e => setCredential(e.target.value)}\n              required\n              autoFocus={true}\n            />\n          </div>\n          <div className=\"input-div\">\n            <label>Password</label>\n            <input\n              className='input'\n              type='password'\n              value={password}\n              onChange={e => setPassword(e.target.value)}\n              required\n            />\n          </div>\n        </div>\n        <div className=\"buttons-div\">\n          <button\n            className='button'\n            type='submit'\n            ref={submitButtonRef}\n          >Log in</button>\n          <button\n            className='button button-Reset'\n            onClick={handleCancelClick}\n          > Cancel </button>\n        </div>\n        <div className=\"login-signup-invite\">\n          <span>Don't have an account?</span>\n          <span>\n            <button className=\"button button-invite\" onClick={handleSignupClick}>Sign up</button>\n          </span>\n          <span>\n            <button className=\"button button-invite\" onClick={handleDemoClick}>Demo</button>\n          </span>\n        </div>          \n      </form>\n    </div>\n  );\n}\nexport default LoginFormPage;","/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/components/Home/index.js",["193","194","195","196","197"],"import MapComponent, { MapWithMarkerClusterer } from '../GoogleMaps';\nimport { Link } from 'react-router-dom';\n\nimport Spot, { AllSpots } from '../Spot';\nimport UploadForm from '../UploadForm';\nimport Banner from './Banner';\n\n\nexport default function Home() {\n  return (\n    <div className=\"main-home-view\">\n      <Banner />\n      <div className=\"main-home-view-spots\" >\n        {/* <MapComponent /> */}\n        {/* <MapWithMarkerClusterer /> */}\n        {/* <Spot /> */}\n        <AllSpots />\n        {/* <Link path='upload' > */}\n        {/* <UploadForm link=\"official\"/> */}\n        {/* </Link> */}\n      </div>\n    </div>\n  );\n}","/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/components/SignupFormPage/index.js",[],"/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/components/Navigation/index.js",[],"/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/components/Footer/index.js",[],"/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/components/Navigation/ProfileButton.js",[],"/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/components/Navigation/NotificationBell.js",["198"],"import React,{ useRef } from 'react';\nimport { useDispatch } from 'react-redux';\n\nexport default function NotificationBell({ user }) {\n  const dispatch = useDispatch();\n\n  const dropdownMenuRef = useRef(null);\n\n  function DropdownMenu() {\n    return (\n      <div className=\" dropdown-menu\" ref={dropdownMenuRef}>\n        <div className=\"dropdown-menu-item\">{user.username}</div>\n        <hr className=\"hr\" />\n        <div className=\"dropdown-menu-item\">{user.email}</div>\n      </div>\n    );\n  }\n  return (\n    <>\n      <span\n        className=\"dropdown-menu-parent\"\n      >\n        <button \n          className=\"fa fa-bell icon-span\" \n          style={{marginLeft: '15px'}}\n        />\n        {\n          <DropdownMenu />\n        }\n      </span>\n      <span \n        id=\"notification-number\"\n        className='notification-badge'\n      >9</span>\n    </>\n  );\n}\n","/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/components/Navigation/GithubLink.js",["199"],"import React,{ useRef } from 'react';\nimport { useDispatch } from 'react-redux';\n\nexport default function GithubLink({ user }) {\n  const dispatch = useDispatch();\n\n  const dropdownMenuRef = useRef(null);\n\n  function DropdownMenu() {\n    return (\n      <div className=\" dropdown-menu\" ref={dropdownMenuRef}>\n        <div className=\"dropdown-menu-item\">\n          <a className=\"github-a\" href='https://github.com/suasllc'>Tony Ngo</a>\n          </div>\n        <hr className=\"hr\" />\n        <div className=\"dropdown-menu-item\">\n          <a className=\"github-a\" href='https://github.com/suasllc/fullstack-authenticate-me'>Github Repo</a>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <>\n      <span\n        className=\"dropdown-menu-parent\"\n        style={{marginRight: '20px'}}\n      >\n        <button className=\"fab fa-github icon-span\" />\n        {\n          <DropdownMenu />\n        }\n      </span>\n    </>\n  );\n}\n","/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/components/GoogleMaps/index.js",["200"],"import React, { useState } from 'react'\nimport { GoogleMap, LoadScript, Marker, MarkerClusterer, InfoWindow } from '@react-google-maps/api';\n\nconst containerStyle = {\n  width: '400px',\n  height: '1000px',\n};\n//38.4835° N, 78.8497° W\nconst defaultCenter = {\n  lat: 38.513962313966964,\n  lng: -78.4352627132812\n};\n\nconst position = defaultCenter;\n\nconst defaultLocations = [\n  { lat: 38.6159712, lng: -78.4503689 },\n  { lat: 38.399970959, lng: -78.4956875 },\n  { lat: 38.22864641, lng: -78.71404078 },\n  { lat: 38.24914045, lng: -78.575338394 },\n  { lat: 38.58806741, lng: -78.34050563 },\n]\n\nconst options = {\n  imagePath:\n    'https://developers.google.com/maps/documentation/javascript/examples/markerclusterer/m', // so you must have m1.png, m2.png, m3.png, m4.png, m5.png and m6.png in that folder\n}\n\nfunction createKey(location) {\n  return location.lat + location.lng\n}\n\nconst labels = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n\nfunction MapComponent({ center = defaultCenter, zoom = 10 }) {\n  const [map, setMap] = React.useState(null)\n\n  const onLoad = React.useCallback(function callback(map) {\n    const bounds = new window.google.maps.LatLngBounds();\n    map.fitBounds(bounds);\n    setMap(map)\n  }, [])\n\n  const onUnmount = React.useCallback(function callback(map) {\n    setMap(null)\n  }, [])\n\n  const onMarkerLoad = marker => {\n    console.log('marker: ', marker)\n  }\n\n  return (\n    <LoadScript\n      googleMapsApiKey=\"AIzaSyAkH92G4PO4QrcdQ1GjsX5ThHe7tWNyQog\"\n    >\n      <GoogleMap\n        mapContainerStyle={containerStyle}\n        center={center}\n        zoom={zoom}\n        onLoad={onLoad}\n        onUnmount={onUnmount}\n      >\n        { /* Child components, such as markers, info windows, etc. */}\n        <Marker\n          onLoad={onMarkerLoad}\n          position={position}\n        />\n        <></>\n      </GoogleMap>\n    </LoadScript>\n  )\n}\n\nexport const MapWithMarkerClusterer = ({\n  center = defaultCenter,\n  zoom = 7,\n  locations = defaultLocations,\n  spots = []\n}) => {\n  const [selected, setSelected] = useState({});\n  console.log('spots', spots);\n\n  const onSelect = spot => {\n    setSelected({ spot });\n  }\n  return (\n    <LoadScript\n      googleMapsApiKey=\"AIzaSyAkH92G4PO4QrcdQ1GjsX5ThHe7tWNyQog\"\n    >\n      <GoogleMap id='marker-example' mapContainerStyle={containerStyle} zoom={zoom} center={center}>\n        <MarkerClusterer options={options}>\n          {(clusterer) =>\n            spots.map((spot, i) => (\n              <Marker\n                key={createKey(spot.gpsLocation)}\n                position={{ lat: spot.gpsLocation[0], lng: spot.gpsLocation[1] }}\n                clusterer={clusterer}\n                label={labels[i % labels.length]}\n                onClick={() => onSelect(spot)}\n              />\n            ))\n          }\n        </MarkerClusterer>\n        {\n          selected.spot &&\n          (\n            <InfoWindow\n              position={{ lat: selected.spot.gpsLocation[0], lng: selected.spot.gpsLocation[1] }}\n              clickable={true}\n              onCloseClick={() => setSelected({})}\n            >\n              <div>\n                <p>{selected.spot.name}</p>\n                <p>{\n                  selected.spot.streetAddress + \" \" +\n                  selected.spot.city + \" \" +\n                  selected.spot.stateProvince + \" \" +\n                  selected.spot.zipCode\n                }</p>\n                {/* {Todo: add a picture} */}\n              </div>\n            </InfoWindow>\n          )\n        }\n      </GoogleMap>\n    </LoadScript>\n  )\n}\n\nexport default MapComponent;","/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/store/spot.js",["201","202"],"// frontend/src/store/spot.js\n\nimport fetch from './csrf';\n\nconst SET_ONE_SPOT = 'session/SET_ONE_SPOT';\nconst REMOVE_ONE_SPOT = 'session/REMOVE_ONE_SPOT';\nconst SET_ALL_SPOTS = 'session/SET_ALL_SPOTS';\nconst REMOVE_ALL_SPOT = 'session/REMOVE_ALL_SPOT';\n\nconst setSpotPOJO = (spot) => ({\n  type: SET_ONE_SPOT,\n  spot\n});\nconst setAllSpotsPOJO = (spots) => ({\n  type: SET_ALL_SPOTS,\n  spots\n});\nconst removeSpotPOJO = () => ({\n  type: REMOVE_ONE_SPOT\n});\n\n\nexport const getOneSpot = (id) => async dispatch => {\n  const res = await fetch(`/api/spots/${id}`, {\n  }); //This fetch is a modified fetch, which already returns data after res.json()\n  if (res.ok) {\n    const fedback_spot = res.data.spot; //we need this user back from backend, NOT the provided\n    dispatch(setSpotPOJO(fedback_spot));\n  }\n  return res;\n}\n\nexport const getAllSpots = () => async dispatch => {\n  const res = await fetch(`/api/spots`, {\n  }); //This fetch is a modified fetch, which already returns data after res.json()\n  if (res.ok) {\n    const fedback_spots = res.data.spots; //we need this user back from backend, NOT the provided\n    dispatch(setAllSpotsPOJO(fedback_spots));\n  }\n  return res;\n}\n\nexport const createOneSpot = ({ spot }) => async dispatch => {\n  const res = await fetch(`/api/spots`, {\n    method: 'POST',\n    body: JSON.stringify({ spot })\n  }); //This fetch is a modified fetch, which already returns data after res.json()\n  if (res.ok) {\n    const fedback_spot = res.data.spot;\n    dispatch(setSpotPOJO(fedback_spot));\n  }\n  return res;\n}\n\n\nconst initialState = [];\n\nconst spotReducer = (state = initialState, action) => {\n  let newState;\n  switch (action.type) {\n    case SET_ONE_SPOT:\n      newState = JSON.parse(JSON.stringify(state));\n      newState.push(JSON.parse(JSON.stringify(action.spot)));\n      return newState;\n    case SET_ALL_SPOTS:\n      newState = JSON.parse(JSON.stringify([...state, ...action.spots]));\n      return newState;\n    default:\n      return state;\n  }\n};\n\nexport default spotReducer;","/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/components/Spot/index.js",["203","204","205","206","207"],"// frontend/src/components/Spot/index.js\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useHistory, Redirect } from 'react-router-dom';\nimport { nanoid } from 'nanoid';\n// import ReactPlayer from 'react-player/youtube'\n\nimport { MapWithMarkerClusterer } from '../GoogleMaps';\nimport Rating from '../Rating';\nimport BookingFormModal from '../BookingForm';\nimport UploadForm from '../UploadForm';\n\nimport * as spotActions from '../../store/spot';\n\nimport '../Forms.css';\nimport './Spot.css';\n\nexport function AllSpots() {\n  const spots = useSelector(state => state.spots);\n  const history = useHistory();\n  const [showReviewForm, setShowReviewForm] = useState(false);\n  let locations = [];\n\n  useEffect(() => {\n    if (spots) {\n      spots.map(spot => {\n        locations.push({ lat: spot.gpsLocation[0], lng: spot.gpsLocation[1] });\n      });\n    }\n  }, [spots.length]);\n\n  function handleBookNowClick(e) {\n    history.push(`/bookings/spots/${e.target.id.split('-')[0]}`);\n    // return <BookingFormModal spot={spot}/>\n  }\n  function handleReviewClick(e) {\n    setShowReviewForm(true)\n    history.push(`/reviews/spots/${e.target.id.split('-')[0]}`);\n  }\n\n  return (\n    <div className='spots-and-maps'>\n      <div className=\"spots-home-display-grid\">\n        {spots && spots.map(spot =>\n          <div key={nanoid()} >\n            <h6>{spot.name}</h6>\n            <div className='spot-media-display'>\n              {spot.urls && spot.urls[0] && !spot.urls[0].toLowerCase().includes(\"youtu\") ?\n                <img key={spot.urls[0]} src={spot.urls[0]} alt={spot.name} className='spot-default-image' />\n                :\n                <></>\n              }\n              <div className=\"start-rating-on-top-of-image\">\n                <Rating rated={3 + (Math.random() * 2)} />\n              </div>\n            </div>\n            <div style={{ marginTop: '10px' }}>\n              <div className=\"buttons-and-address\">\n                <div className=\"book-and-more-div\">\n                  <button onClick={handleBookNowClick} id={spot.id + \"-\" + nanoid()}>Book Now</button>\n                  <button onClick={handleReviewClick} id={spot.id + \"-\" + nanoid()}>Review</button>\n                </div>\n                <div className='spot-address'>\n                  <p >\n                    {spot.streetAddress}\n                  </p>\n                  <p >\n                    {spot.city} {spot.stateProvice} {spot.zipCode} {spot.country}\n                  </p>\n                </div>\n              </div>\n              <p className='spot-description hide-scollbar'>\n                {spot.description}\n              </p>\n            </div>\n          </div>\n        )}\n      </div>\n      <div className='home-side-map'>\n        {\n          spots && <MapWithMarkerClusterer \n            center={locations[0]}\n            zoom={5} \n            locations={locations}\n            spots={spots} />\n        }\n      </div>\n    </div>\n  );\n}\n\nexport function SpotFormModal() {\n  const dispatch = useDispatch();\n  const sessionUser = useSelector(state => state.session.user);\n  // const spots = useSelector(state => state.spots);\n  const media = useSelector(state => state.media);\n  const [name, setName] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [units, setUnits] = useState(1);\n  const [latitude, setLatitude] = useState(undefined);\n  const [longitude, setLongitude] = useState(undefined);\n  const [fullAddress, setFullAddress] = useState(\"\");\n  const [streetAddress, setStreetAddress] = useState(\"\");\n  const [city, setCity] = useState(\"\");\n  const [stateProvice, setStateProvince] = useState(\"\");\n  const [zipCode, setZipcode] = useState(undefined);\n  const [country, setCountry] = useState(\"\");\n  const [perNightRate, setPerNightRate] = useState(undefined);\n  const [accommodationType, setAccommodationType] = useState(undefined);\n  const [website, setWebsite] = useState(\"\");\n  const [showUploadForm, setShowUploadForm] = useState(false);\n  const [errors, setErrors] = useState([]);\n  const spotModalRef = useRef(undefined);\n  const history = useHistory();\n\n  useEffect(() => {\n    console.log(\"35 media\", media);\n  }, [media])\n\n  if (!sessionUser) {\n    if (spotModalRef.current)\n      spotModalRef.current.style.display = \"none\";\n    console.log('spot', history);\n    return <Redirect to='/login' />;\n  }\n\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setErrors([]);\n\n    console.log(\"handleSubmit media\", media, \" id\", media&&media[media.length-1].id);\n\n    return dispatch(spotActions.createOneSpot({\n      spot: {\n        userId: sessionUser.id,\n        name,\n        description,\n        units,\n        gpsLocation: [latitude, longitude],\n        mediaUrlIds: [media[media.length-1].id],\n        streetAddress,\n        city,\n        stateProvice,\n        zipCode,\n        country,\n        perNightRate,\n        accommodationType,\n        website\n      }\n    }))\n      .then(res => {\n        if (spotModalRef.current)\n          spotModalRef.current.style.display = \"none\";\n        history.push('/');\n      })\n      .catch(res => {\n        if (res.data && res.data.errors) setErrors(res.data.errors);\n      });\n  };\n\n  const handleCancelClick = e => {\n    e.preventDefault();\n    if (spotModalRef.current)\n      spotModalRef.current.style.display = \"none\";\n    history.push('/');\n  }\n\n  const parseAddress = (textValue) => {\n    const values = textValue.split(',')\n    setStreetAddress(values[0]);\n    setCity(values[1]);\n    setStateProvince(values[2]);\n    setZipcode(values[3]);\n    setCountry(values[4]);\n    console.log(streetAddress, city, stateProvice, zipCode, country);\n  };\n\n  return (\n    <div className=\"modal\" ref={spotModalRef}\n    // onClick={e => { e.preventDefault(); if (showUploadForm) setShowUploadForm(false) }}\n    >\n      <form\n        className='form-container modal-content-spot-creation'\n        onSubmit={handleSubmit}\n      >\n        <h3>Create Your Spot</h3>\n\n        <ul className='error-messages'>\n          {errors.map((error, index) => <li key={index}>{error}</li>)}\n        </ul>\n        <div className=\"inputs-div\">\n          <div className=\"input-div\">\n            <label>Spot Name</label>\n            <input\n              className='input'\n              type='text'\n              value={name}\n              onChange={e => setName(e.target.value)}\n              required\n              autoFocus={true}\n            />\n          </div>\n          <div className=\"input-div\">\n            <label>Description</label>\n            <textarea\n              className='input'\n              type='text'\n              value={description}\n              onChange={e => setDescription(e.target.value)}\n              rows={10}\n              required\n            />\n          </div>\n          <div className=\"input-div\">\n            <label>Number of Units</label>\n            <input\n              className='input-number'\n              type='number'\n              value={units}\n              min={1}\n              onChange={e => setUnits(e.target.value)}\n              required\n            />\n          </div>\n          <div className=\"input-div-number\">\n            <label>GPS Location (Lat, Long)</label>\n            <div className=\"input-div\" style={{ paddingTop: '0px', paddingLeft: '5px' }}>\n              <input\n                className='input'\n                type='number'\n                min={-90}\n                max={90}\n                step={1e-14}\n                value={latitude}\n                onChange={e => {\n                  if (e.target.value < -90) e.target.value = -90;\n                  if (e.target.value > 90) e.target.value = 90;\n                  setLatitude(e.target.value)\n                }}\n                required\n              />\n              <input\n                className='input'\n                type='number'\n                min={-180}\n                max={180}\n                step={1e-14}\n                value={longitude}\n                onChange={e => {\n                  if (e.target.value < -180) e.target.value = -180;\n                  if (e.target.value > 180) e.target.value = 180;\n                  setLongitude(e.target.value)\n                }}\n                required\n              />\n            </div>\n          </div>\n          <div className=\"input-div\">\n            <label>Address (Street, City, State/Province, Zip Code, Country)</label>\n            <textarea\n              className='input'\n              type='text'\n              value={fullAddress}\n              onChange={e => { setFullAddress(e.target.value); parseAddress(e.target.value) }}\n              required\n              rows={3}\n              placeholder=\"Street address first line,&#10;City, State/Provice, Zipcode&#10;Country\"\n            />\n          </div>\n          <div className=\"input-div\">\n            <label>Rate Per Night ($USD)</label>\n            <input\n              className='input-number'\n              type='number'\n              value={perNightRate}\n              min={0}\n              onChange={e => setPerNightRate(e.target.value)}\n            />\n          </div>\n          <div className=\"input-div\">\n            <label>Accommodation Type</label>\n            <input\n              className='input-number'\n              type='number'\n              value={accommodationType}\n              min={0}\n              onChange={e => setAccommodationType(e.target.value)}\n            />\n          </div>\n          <div className=\"input-div\">\n            <label>External Website</label>\n            <input\n              className='input'\n              type='text'\n              value={website}\n              min={0}\n              onChange={e => setWebsite(e.target.value)}\n            />\n          </div>\n          <div className=\"input-div\">\n            <button\n              className='button button-small button-Send'\n              onClick={e => { e.preventDefault(); setShowUploadForm(!showUploadForm) }}\n            >Upload Pic/Vid</button>\n            {\n              showUploadForm && <UploadForm\n                link=\"official/spots\"\n                divClass=\"side-modal\"\n                redirectHome={false}\n                displayed=\"block\"\n              />\n            }\n          </div>\n        </div>\n        <div className=\"buttons-div\">\n          <button\n            className='button'\n            type='submit'\n          >Submit</button>\n          <button\n            className='button button-Reset'\n            onClick={handleCancelClick}\n          > Cancel </button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default function Spot() {\n  const dispatch = useDispatch();\n  const spots = useSelector(state => state.spots);\n  return (\n    <div>\n      {spots && spots.map(spot =>\n        <div key={spot.name}>\n          <h3>{spot.name}</h3>\n          <div className='spot-media-display'>\n            {spot.urls && spot.urls.map(url =>\n              url.toLowerCase().includes(\"youtu\") ?\n                // <ReactPlayer\n                //   url={url}\n                //   width='400px'\n                //   height='225px'\n                //   controls={true}\n                //   key={url}\n                // />\n                <></>\n                :\n                <img key={url} src={url} alt={spot.name} className='media-display' />\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}","/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/components/UploadForm/index.js",[],"/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/components/Home/Banner/index.js",["208","209","210","211","212"],"\nimport { useEffect } from 'react';\n\nexport default function Banner() {\n\n  let myIndex = 0;\n\n  function carousel() {\n    let i;\n    let x = document.getElementsByClassName(\"slides\");\n    if (!x.length) return;\n    for (i = 0; i < x.length; i++) {\n      x[i].style.display = \"none\";\n    }\n    myIndex++;\n    if (myIndex > x.length) { myIndex = 1 }\n    x[myIndex - 1].style.display = \"block\";\n    setTimeout(carousel, 2000); // Change image every 2 seconds\n  }\n\n  useEffect(() => {\n    carousel();\n  })\n\n  return (\n    <div className='home-banner-div'>\n      <img className=\"slides\" src=\"https://tripcamp.s3.amazonaws.com/resources/images/official/tripcamp-home1.jpg\" />\n      <img className=\"slides\" src=\"https://tripcamp.s3.amazonaws.com/resources/images/official/tripcamp-home2.jpg\" />\n      <img className=\"slides\" src=\"https://tripcamp.s3.amazonaws.com/resources/images/official/tripcamp-home5.jpg\" />\n      <img className=\"slides\" src=\"https://tripcamp.s3.amazonaws.com/resources/images/official/tripcamp-home4.jpg\" />\n      <img className=\"slides\" src=\"https://tripcamp.s3.amazonaws.com/resources/images/official/tripcamp-home6.jpg\" />\n    </div>\n  );\n}",["213","214"],"/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/components/Rating/index.js",["215"],"import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { nanoid } from 'nanoid';\n\nimport { setRatingPOJO } from '../../store/rating';\n\nimport './Rating.css';\n\nexport default function Rating({ rated = 0, userChangeable = false }) {\n  const [trialRating, setTrialRating] = useState(rated);\n  const [rating, setRating] = useState(rated);\n  let arrayOf5 = new Array(5).fill(1);\n  const dispatch = useDispatch();\n  const ratings = useSelector(state => state.ratings);\n\n  if (!userChangeable) {\n    const ratatedWholeNumber = Math.floor(rated);\n    const ratedDecimal = rated - ratatedWholeNumber;\n    return (\n      <div>\n        {\n          arrayOf5.map((el, i) => {\n            return <span\n              className={i < ratatedWholeNumber ?\n                \"fa fa-star checked star-set-font-size\"\n                : (ratedDecimal > 0 && i < ratatedWholeNumber + 1 ? \"fas fa-star-half-alt star-set-font-size checked\" : \"far fa-star star-set-font-size\")\n              }\n              key={nanoid()}\n              id={(i + 1) + \"-\" + nanoid()}\n              onClick={onStarClicked}\n            />\n          })\n        }\n        <span className=\"star-set-font-size\">{rated.toFixed(1)}</span>\n      </div>\n    );\n  }\n\n  function onMouseOver(e) {\n    const id = e.target.id.split(\"-\")[0];\n    setTrialRating(Number(id));\n  }\n  function onMouseLeave() {\n    setTrialRating(rating);\n  }\n\n  function onStarClicked(e) {\n    const ratingNumber = Number(e.target.id.split(\"-\")[0]);\n    setRating(ratingNumber);\n    setTrialRating(ratingNumber)\n    dispatch(setRatingPOJO(ratingNumber));\n  }\n\n  return (\n    <div onMouseOver={onMouseOver} onMouseLeave={onMouseLeave}>\n      <span id={0 + \"-\" + nanoid()} onClick={onStarClicked} className=\"far fa-star star-set-font-size\" style={{ color: \"rgba(0,0,0,0)\" }}> </span>\n      { arrayOf5.map((el, i) => <span\n        className={i < trialRating ? \"fa fa-star checked star-set-font-size\" : \"far fa-star star-set-font-size\"}\n        key={nanoid()}\n        id={(i + 1) + \"-\" + nanoid()}\n        onClick={onStarClicked}\n      />\n      )}\n      <span className=\"far fa-star star-set-font-size\" style={{ color: \"rgba(0,0,0,0)\" }}>{ }</span>\n    </div>\n  );\n}","/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/store/booking.js",["216"],"// frontend/src/store/booking.js\n\nimport fetch from './csrf';\n\nconst SET_ONE_BOOKING = 'session/SET_ONE_BOOKING';\nconst SET_ALL_BOOKINGS = 'session/SET_ALL_BOOKINGS';\nconst REMOVE_ONE_BOOKING = 'session/REMOVE_ONE_BOOKING';\n\nconst setBookingPOJO = (booking) => ({\n  type: SET_ONE_BOOKING,\n  booking\n});\nconst setAllBookingsPOJO = (bookings) => ({\n  type: SET_ALL_BOOKINGS,\n  bookings\n});\nconst removeBookingPOJO = () => ({\n  type: REMOVE_ONE_BOOKING\n});\n\n\nexport const getOneBooking = (id) => async dispatch => {\n  const res = await fetch(`/api/bookings/${id}`, {\n  }); //This fetch is a modified fetch, which already returns data after res.json()\n  if (res.ok) {\n    const fedback_booking = res.data.booking; //we need this user back from backend, NOT the provided\n    dispatch(setBookingPOJO(fedback_booking));\n  }\n  return res;\n}\n\nexport const getAllBookings = () => async dispatch => {\n  const res = await fetch(`/api/bookings`, {\n  }); //This fetch is a modified fetch, which already returns data after res.json()\n  if (res.ok) {\n    const fedback_bookings = res.data.bookings; //we need this user back from backend, NOT the provided\n    dispatch(setAllBookingsPOJO(fedback_bookings));\n  }\n  return res;\n}\nexport const createOneBooking = ({ booking }) => async dispatch => {\n  const res = await fetch(`/api/bookings`, {\n    method: 'POST',\n    body: JSON.stringify({ booking })\n  }); //This fetch is a modified fetch, which already returns data after res.json()\n  if (res.ok) {\n    const fedback_booking = res.data.booking;\n    dispatch(setBookingPOJO(fedback_booking));\n  }\n  return res;\n}\n\nconst initialState = [];\n\nconst bookingReducer = (state = initialState, action) => {\n  let newState;\n  switch (action.type) {\n    case SET_ONE_BOOKING:\n      newState = JSON.parse(JSON.stringify(state));\n      newState.push(JSON.parse(JSON.stringify(action.booking)));\n      return newState;\n    case SET_ALL_BOOKINGS:\n      newState = JSON.parse(JSON.stringify([...state, ...action.bookings]));\n      return newState;\n    default:\n      return state;\n  }\n};\n\nexport default bookingReducer;","/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/store/review.js",["217","218"],"// frontend/src/store/review.js\n\nimport fetch from './csrf';\n\nconst SET_ONE_REVIEW = 'session/SET_ONE_REVIEW';\nconst REMOVE_ONE_REVIEW = 'session/REMOVE_ONE_REVIEW';\nconst SET_ALL_REVIEWS = 'session/SET_ALL_REVIEWS';\nconst REMOVE_ALL_REVIEW = 'session/REMOVE_ALL_REVIEW';\n\nconst setReviewPOJO = (review) => ({\n  type: SET_ONE_REVIEW,\n  review\n});\nconst setAllReviewsPOJO = (reviews) => ({\n  type: SET_ALL_REVIEWS,\n  reviews\n});\nconst removeReviewPOJO = () => ({\n  type: REMOVE_ONE_REVIEW\n});\n\n\nexport const getOneReview = (id) => async dispatch => {\n  const res = await fetch(`/api/reviews/${id}`, {\n  }); //This fetch is a modified fetch, which already returns data after res.json()\n  if (res.ok) {\n    const fedback_review = res.data.review; //we need this user back from backend, NOT the provided\n    dispatch(setReviewPOJO(fedback_review));\n  }\n  return res;\n}\n\nexport const getAllReviews = () => async dispatch => {\n  const res = await fetch(`/api/reviews`, {\n  }); //This fetch is a modified fetch, which already returns data after res.json()\n  if (res.ok) {\n    const fedback_reviews = res.data.reviews; //we need this user back from backend, NOT the provided\n    dispatch(setAllReviewsPOJO(fedback_reviews));\n  }\n  return res;\n}\n\nexport const createOneReview = ({ review }) => async dispatch => {\n  const res = await fetch(`/api/reviews`, {\n    method: 'POST',\n    body: JSON.stringify({ review })\n  }); //This fetch is a modified fetch, which already returns data after res.json()\n  if (res.ok) {\n    const fedback_review = res.data.review;\n    dispatch(setReviewPOJO(fedback_review));\n  }\n  return res;\n}\n\nconst initialState = [];\n\nconst reviewReducer = (state = initialState, action) => {\n  let newState;\n  switch (action.type) {\n    case SET_ONE_REVIEW:\n      newState = JSON.parse(JSON.stringify(state));\n      newState.push(JSON.parse(JSON.stringify(action.review)));\n      return newState;\n    case SET_ALL_REVIEWS:\n      newState = JSON.parse(JSON.stringify([...state, ...action.reviews]));\n      return newState;\n    default:\n      return state;\n  }\n};\n\nexport default reviewReducer;","/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/components/BookingForm/index.js",["219","220"],"// frontend/src/components/BookingForm/index.js\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Redirect, useHistory, useParams } from 'react-router-dom';\n\nimport * as sessionActions from '../../store/session';\nimport * as bookingActions from '../../store/booking';\n\nimport '../Forms.css';\n\nexport default function BookingFormModal() {\n  const dispatch = useDispatch();\n  const sessionUser = useSelector(state => state.session.user);\n  const spots = useSelector(state => state.spots);\n  const [startDate, setStartDate] = useState(null);\n  const [endDate, setEndDate] = useState(null);\n  const [numberOfGuests, setNumberOfGuests] = useState(1);\n  const [specialRequest, setSpecialRequest] = useState(\"\");\n  const [errors, setErrors] = useState([]);\n  const bookingModalRef = useRef(null);\n  const history = useHistory();\n  const params = useParams();\n\n  if (!sessionUser) {\n    if (bookingModalRef.current)\n      bookingModalRef.current.style.display = \"none\";\n    console.log('booking', history);\n    return <Redirect to='/login' />;\n  }\n\n  let spot;\n  let spotInfo = <></>;\n\n  //TODO: make this useEffect work so it won't reload spot data everytime user types a key\n  // useEffect(() => {\n  if (params && spots) spot = spots.find(spot => spot.id === Number(params.spotId));\n  // console.log(\"spot\", spot, params);\n  spotInfo = spot && <>\n    <p>Spot:</p>\n    <p>{spot.name}</p>\n    <p>{spot.streetAddress}</p>\n  </>\n  // });\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setErrors([]);\n\n    return dispatch(bookingActions.createOneBooking({\n      booking: {\n        userId: sessionUser.id,\n        spotId: spot.id,\n        startDate,\n        endDate,\n        guests: numberOfGuests,\n        specialRequest\n      }\n    }))\n      .then(res => {\n        if (bookingModalRef.current)\n          bookingModalRef.current.style.display = \"none\";\n        history.push('/');\n      })\n      .catch(res => {\n        if (res.data && res.data.errors) setErrors(res.data.errors);\n      });\n  };\n\n  const handleCancelClick = e => {\n    e.preventDefault();\n    if (bookingModalRef.current)\n      bookingModalRef.current.style.display = \"none\";\n    history.push('/');\n  }\n\n  return (\n    <div className=\"modal\" ref={bookingModalRef}>\n      <form\n        className='form-container modal-content'\n        onSubmit={handleSubmit}\n      >\n        <h3>Booking Form</h3>\n        <div>\n          {\n            spotInfo\n          }\n        </div>\n        <ul className='error-messages'>\n          {errors.map((error, index) => <li key={index}>{error}</li>)}\n        </ul>\n        <div className=\"inputs-div\">\n          <div className=\"input-div\">\n            <label>Start Date</label>\n            <input\n              className='input-date'\n              type='date'\n              value={startDate}\n              onChange={e => setStartDate(e.target.value)}\n              required\n            />\n          </div>\n          <div className=\"input-div\">\n            <label>End Date</label>\n            <input\n              className='input-date'\n              type='date'\n              value={endDate}\n              onChange={e => setEndDate(e.target.value)}\n              required\n            />\n          </div>\n          <div className=\"input-div\">\n            <label>Number of Guests</label>\n            <input\n              className='input-number'\n              type='number'\n              value={numberOfGuests}\n              min={1}\n              onChange={e => setNumberOfGuests(e.target.value)}\n              required\n            />\n          </div>\n          <div className=\"input-div\">\n            <label>Special Request</label>\n            <textarea\n              className='input'\n              type='text'\n              value={specialRequest}\n              onChange={e => setSpecialRequest(e.target.value)}\n              // required // this is NOT required\n            />\n          </div>\n        </div>\n        <div className=\"buttons-div\">\n          <button\n            className='button'\n            type='submit'\n          >Submit</button>\n          <button\n            className='button button-Reset'\n            onClick={handleCancelClick}\n          > Cancel </button>\n        </div>\n      </form>\n    </div>\n  );\n}\n","/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/components/ReviewForm/index.js",["221","222","223","224"],"// frontend/src/components/ReviewForm/index.js\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Redirect, useHistory, useParams } from 'react-router-dom';\n\nimport * as sessionActions from '../../store/session';\nimport * as reviewActions from '../../store/review';\n\nimport Rating from '../Rating';\n\nimport '../Forms.css';\nimport { nanoid } from 'nanoid';\n\nexport default function ReviewFormModal({divClass = \"modal\", formContentClass = 'form-container modal-content'}) {\n  const dispatch = useDispatch();\n  const sessionUser = useSelector(state => state.session.user);\n  const spots = useSelector(state => state.spots);\n  const ratings = useSelector(state => state.ratings);\n  const [title, setTitle] = useState(\"\");\n  const [body, setBody] = useState(\"\");\n  const [errors, setErrors] = useState([]);\n  const reviewModalRef = useRef(null);\n  const history = useHistory();\n  const params = useParams();\n  const [trialRating, setTrialRating] = useState(null);\n  const [rating, setRating] = useState(null);\n\n  // useEffect(() => {\n  //   setRating(ratings[ratings.length - 1]);\n  //   console.log('useEffect', rating);\n  // }, [ratings[ratings.length - 1]]);\n\n  if (!sessionUser) {\n    if (reviewModalRef.current)\n      reviewModalRef.current.style.display = \"none\";\n    console.log('review', history);\n    return <Redirect to='/login' />;\n  }\n\n  let spot;\n  let spotInfo = <></>;\n\n  //TODO: make this useEffect work so it won't reload spot data everytime user types a key\n  // useEffect(() => {\n  if (params && spots) spot = spots.find(spot => spot.id === Number(params.spotId));\n  // console.log(\"spot\", spot, params);\n  spotInfo = spot && <>\n    <p>Spot:</p>\n    <p>{spot.name}</p>\n    <p>{spot.streetAddress}</p>\n  </>\n  // });\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setErrors([]);\n\n    // console.log('ratings', ratings);\n    // setRating(ratings[ratings.length-1]);    \n    if (!rating)\n      return setErrors([\"Select a rating\"]);\n\n    return dispatch(reviewActions.createOneReview({\n      review: {\n        userId: sessionUser.id,\n        spotId: spot.id,\n        title,\n        body,\n        rating,\n      }\n    }))\n      .then(res => {\n        if (reviewModalRef.current)\n          reviewModalRef.current.style.display = \"none\";\n        history.push('/');\n      })\n      .catch(res => {\n        if (res.data && res.data.errors) setErrors(res.data.errors);\n      });\n  };\n\n  const handleCancelClick = e => {\n    e.preventDefault();\n    if (reviewModalRef.current)\n      reviewModalRef.current.style.display = \"none\";\n    history.push('/');\n  }\n\n  // const handleFormClick = e => {\n  //   if (e.target.id[1] === '-')\n  //     setRating(ratings[ratings.length - 1])\n  //   console.log('handleFormClick ratings', ratings);\n  // };\n\n  let arrayOf5 = new Array(5).fill(1);\n\n  function onMouseOver(e) {\n    const id = e.target.id.split(\"-\")[0];\n    setTrialRating(Number(id));\n  }\n  function onMouseLeave() {\n    setTrialRating(rating);\n  }\n  function onStarClicked(e) {\n    const ratingNumber = Number(e.target.id.split(\"-\")[0]);\n    setRating(ratingNumber);\n    setTrialRating(ratingNumber)\n  }\n\n  return (\n    <div className={divClass} ref={reviewModalRef}>\n      <form\n        className={formContentClass}\n        onSubmit={handleSubmit}\n      // onClick={handleFormClick}\n      >\n        <h3>Review Form</h3>\n        <div>\n          {\n            spotInfo\n          }\n        </div>\n        <ul className='error-messages'>\n          {errors.map((error, index) => <li key={index}>{error}</li>)}\n        </ul>\n        <div className=\"inputs-div\">\n          <div className=\"input-div\">\n            <label>Title</label>\n            <input\n              className='input'\n              type='text'\n              value={title}\n              onChange={e => setTitle(e.target.value)}\n              required\n              autoFocus={true}\n            />\n          </div>\n          <div className=\"input-div\">\n            <label>Body</label>\n            <textarea\n              className='input'\n              type='text'\n              value={body}\n              onChange={e => setBody(e.target.value)}\n              rows={8}\n              required\n            />\n          </div>\n          <div className=\"input-div\">\n            <label>Rating</label>\n            <div onMouseOver={onMouseOver} onMouseLeave={onMouseLeave}>\n              <span id={0 + \"-\" + nanoid()} onClick={onStarClicked} className=\"far fa-star star-set-font-size\" style={{ color: \"rgba(0,0,0,0)\" }}> </span>\n              {arrayOf5.map((el, i) => <span\n                className={i < trialRating ? \"fa fa-star checked star-set-font-size\" : \"far fa-star star-set-font-size\"}\n                key={nanoid()}\n                id={(i + 1) + \"-\" + nanoid()}\n                onClick={onStarClicked}\n              />\n              )}\n              <span className=\"far fa-star star-set-font-size\" style={{ color: \"rgba(0,0,0,0)\" }}>{ }</span>\n            </div>\n            {/* <Rating userChangeable={true} id={\"rating\" + nanoid()} /> */}\n          </div>\n        </div>\n        <div className=\"buttons-div\">\n          <button\n            className='button'\n            type='submit'\n          >Submit</button>\n          <button\n            className='button button-Reset'\n            onClick={handleCancelClick}\n          > Cancel </button>\n        </div>\n      </form>\n    </div>\n  );\n}\n","/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/store/rating.js",["225","226"],"// frontend/src/store/rating.js\n\nimport fetch from './csrf';\n\nconst SET_ONE_RATING = 'session/SET_ONE_RATING';\nconst REMOVE_ONE_RATING = 'session/REMOVE_ONE_RATING';\n\nexport const setRatingPOJO = (rating) => ({\n  type: SET_ONE_RATING,\n  rating\n});\n\nexport const removeRatingPOJO = () => ({\n  type: REMOVE_ONE_RATING\n});\n\nconst initialState = [];\n\nconst ratingReducer = (state = initialState, action) => {\n  let newState;\n  switch (action.type) {\n    case SET_ONE_RATING:\n      return [action.rating];\n    default:\n      return state;\n  }\n};\n\nexport default ratingReducer;","/home/tony/appacademy/first_solo_project/tripcamp/frontend/src/store/media.js",["227"],"// frontend/src/store/media.js\n\nimport fetch from './csrf';\n\nconst SET_ONE_MEDIUM = 'session/SET_ONE_MEDIUM';\nconst SET_ALL_MEDIA = 'session/SET_ALL_MEDIA';\nconst REMOVE_ONE_MEDIUM = 'session/REMOVE_ONE_MEDIUM';\n\nconst setMediumPOJO = (medium) => ({\n  type: SET_ONE_MEDIUM,\n  medium\n});\nconst setAllMediaPOJO = (media) => ({\n  type: SET_ALL_MEDIA,\n  media\n});\nconst removeMediumPOJO = () => ({\n  type: REMOVE_ONE_MEDIUM\n});\n\n\nexport const getOneMedium = (id) => async dispatch => {\n  const res = await fetch(`/api/media/${id}`, {\n  }); //This fetch is a modified fetch, which already returns data after res.json()\n  if (res.ok) {\n    const fedback_medium = res.data.medium; //we need this user back from backend, NOT the provided\n    dispatch(setMediumPOJO(fedback_medium));\n  }\n  return res;\n}\n\nexport const getAllMedia = () => async dispatch => {\n  const res = await fetch(`/api/media`, {\n  }); //This fetch is a modified fetch, which already returns data after res.json()\n  if (res.ok) {\n    const fedback_media = res.data.media; //we need this user back from backend, NOT the provided\n    dispatch(setAllMediaPOJO(fedback_media));\n  }\n  return res;\n}\nexport const createOneMedium = ({ medium }) => async dispatch => {\n  const res = await fetch(`/api/media`, {\n    method: 'POST',\n    body: JSON.stringify({ medium })\n  }); //This fetch is a modified fetch, which already returns data after res.json()\n  if (res.ok) {\n    const fedback_medium = res.data.medium;\n    dispatch(setMediumPOJO(fedback_medium));\n  }\n  return res;\n}\n\nconst initialState = [];\n\nconst mediumReducer = (state = initialState, action) => {\n  let newState;\n  switch (action.type) {\n    case SET_ONE_MEDIUM:\n      newState = JSON.parse(JSON.stringify(state));\n      newState.push(JSON.parse(JSON.stringify(action.medium)));\n      return newState;\n    case SET_ALL_MEDIA:\n      newState = JSON.parse(JSON.stringify([...state, ...action.media]));\n      return newState;\n    default:\n      return state;\n  }\n};\n\nexport default mediumReducer;",{"ruleId":"228","replacedBy":"229"},{"ruleId":"230","replacedBy":"231"},{"ruleId":"232","severity":1,"message":"233","line":2,"column":25,"nodeType":"234","messageId":"235","endLine":2,"endColumn":33},{"ruleId":"232","severity":1,"message":"236","line":73,"column":10,"nodeType":"234","messageId":"235","endLine":73,"endColumn":18},{"ruleId":"232","severity":1,"message":"237","line":73,"column":20,"nodeType":"234","messageId":"235","endLine":73,"endColumn":31},{"ruleId":"232","severity":1,"message":"238","line":5,"column":9,"nodeType":"234","messageId":"235","endLine":5,"endColumn":17},{"ruleId":"232","severity":1,"message":"238","line":5,"column":9,"nodeType":"234","messageId":"235","endLine":5,"endColumn":17},{"ruleId":"232","severity":1,"message":"239","line":36,"column":10,"nodeType":"234","messageId":"235","endLine":36,"endColumn":13},{"ruleId":"232","severity":1,"message":"240","line":1,"column":8,"nodeType":"234","messageId":"235","endLine":1,"endColumn":20},{"ruleId":"228","replacedBy":"241"},{"ruleId":"230","replacedBy":"242"},{"ruleId":"232","severity":1,"message":"233","line":2,"column":25,"nodeType":"234","messageId":"235","endLine":2,"endColumn":33},{"ruleId":"232","severity":1,"message":"243","line":16,"column":13,"nodeType":"234","messageId":"235","endLine":16,"endColumn":27},{"ruleId":"232","severity":1,"message":"236","line":73,"column":10,"nodeType":"234","messageId":"235","endLine":73,"endColumn":18},{"ruleId":"232","severity":1,"message":"237","line":73,"column":20,"nodeType":"234","messageId":"235","endLine":73,"endColumn":31},{"ruleId":"232","severity":1,"message":"240","line":1,"column":8,"nodeType":"234","messageId":"235","endLine":1,"endColumn":20},{"ruleId":"232","severity":1,"message":"244","line":1,"column":24,"nodeType":"234","messageId":"235","endLine":1,"endColumn":46},{"ruleId":"232","severity":1,"message":"245","line":2,"column":10,"nodeType":"234","messageId":"235","endLine":2,"endColumn":14},{"ruleId":"232","severity":1,"message":"246","line":4,"column":8,"nodeType":"234","messageId":"235","endLine":4,"endColumn":12},{"ruleId":"232","severity":1,"message":"247","line":5,"column":8,"nodeType":"234","messageId":"235","endLine":5,"endColumn":18},{"ruleId":"232","severity":1,"message":"238","line":5,"column":9,"nodeType":"234","messageId":"235","endLine":5,"endColumn":17},{"ruleId":"232","severity":1,"message":"238","line":5,"column":9,"nodeType":"234","messageId":"235","endLine":5,"endColumn":17},{"ruleId":"232","severity":1,"message":"239","line":36,"column":10,"nodeType":"234","messageId":"235","endLine":36,"endColumn":13},{"ruleId":"232","severity":1,"message":"248","line":8,"column":7,"nodeType":"234","messageId":"235","endLine":8,"endColumn":22},{"ruleId":"232","severity":1,"message":"249","line":18,"column":7,"nodeType":"234","messageId":"235","endLine":18,"endColumn":21},{"ruleId":"232","severity":1,"message":"250","line":11,"column":8,"nodeType":"234","messageId":"235","endLine":11,"endColumn":24},{"ruleId":"232","severity":1,"message":"251","line":22,"column":10,"nodeType":"234","messageId":"235","endLine":22,"endColumn":24},{"ruleId":"252","severity":1,"message":"253","line":27,"column":22,"nodeType":"254","messageId":"255","endLine":27,"endColumn":24},{"ruleId":"256","severity":1,"message":"257","line":31,"column":6,"nodeType":"258","endLine":31,"endColumn":20,"suggestions":"259"},{"ruleId":"232","severity":1,"message":"238","line":333,"column":9,"nodeType":"234","messageId":"235","endLine":333,"endColumn":17},{"ruleId":"260","severity":1,"message":"261","line":27,"column":7,"nodeType":"262","endLine":27,"endColumn":118},{"ruleId":"260","severity":1,"message":"261","line":28,"column":7,"nodeType":"262","endLine":28,"endColumn":118},{"ruleId":"260","severity":1,"message":"261","line":29,"column":7,"nodeType":"262","endLine":29,"endColumn":118},{"ruleId":"260","severity":1,"message":"261","line":30,"column":7,"nodeType":"262","endLine":30,"endColumn":118},{"ruleId":"260","severity":1,"message":"261","line":31,"column":7,"nodeType":"262","endLine":31,"endColumn":118},{"ruleId":"228","replacedBy":"263"},{"ruleId":"230","replacedBy":"264"},{"ruleId":"232","severity":1,"message":"265","line":14,"column":9,"nodeType":"234","messageId":"235","endLine":14,"endColumn":16},{"ruleId":"232","severity":1,"message":"266","line":17,"column":7,"nodeType":"234","messageId":"235","endLine":17,"endColumn":24},{"ruleId":"232","severity":1,"message":"267","line":8,"column":7,"nodeType":"234","messageId":"235","endLine":8,"endColumn":24},{"ruleId":"232","severity":1,"message":"268","line":18,"column":7,"nodeType":"234","messageId":"235","endLine":18,"endColumn":23},{"ruleId":"232","severity":1,"message":"269","line":3,"column":35,"nodeType":"234","messageId":"235","endLine":3,"endColumn":44},{"ruleId":"232","severity":1,"message":"270","line":7,"column":13,"nodeType":"234","messageId":"235","endLine":7,"endColumn":27},{"ruleId":"232","severity":1,"message":"269","line":3,"column":35,"nodeType":"234","messageId":"235","endLine":3,"endColumn":44},{"ruleId":"232","severity":1,"message":"270","line":7,"column":13,"nodeType":"234","messageId":"235","endLine":7,"endColumn":27},{"ruleId":"232","severity":1,"message":"271","line":10,"column":8,"nodeType":"234","messageId":"235","endLine":10,"endColumn":14},{"ruleId":"232","severity":1,"message":"265","line":19,"column":9,"nodeType":"234","messageId":"235","endLine":19,"endColumn":16},{"ruleId":"232","severity":1,"message":"272","line":3,"column":8,"nodeType":"234","messageId":"235","endLine":3,"endColumn":13},{"ruleId":"232","severity":1,"message":"273","line":20,"column":7,"nodeType":"234","messageId":"235","endLine":20,"endColumn":15},{"ruleId":"232","severity":1,"message":"274","line":17,"column":7,"nodeType":"234","messageId":"235","endLine":17,"endColumn":23},"no-native-reassign",["275"],"no-negated-in-lhs",["276"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'showForm' is assigned a value but never used.","'setShowForm' is assigned a value but never used.","'dispatch' is assigned a value but never used.","'map' is assigned a value but never used.","'MapComponent' is defined but never used.",["275"],["276"],"'bookingActions' is defined but never used.","'MapWithMarkerClusterer' is defined but never used.","'Link' is defined but never used.","'Spot' is defined but never used.","'UploadForm' is defined but never used.","'REMOVE_ALL_SPOT' is assigned a value but never used.","'removeSpotPOJO' is assigned a value but never used.","'BookingFormModal' is defined but never used.","'showReviewForm' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'locations' and 'spots'. Either include them or remove the dependency array.","ArrayExpression",["277"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["275"],["276"],"'ratings' is assigned a value but never used.","'removeBookingPOJO' is assigned a value but never used.","'REMOVE_ALL_REVIEW' is assigned a value but never used.","'removeReviewPOJO' is assigned a value but never used.","'useEffect' is defined but never used.","'sessionActions' is defined but never used.","'Rating' is defined but never used.","'fetch' is defined but never used.","'newState' is defined but never used.","'removeMediumPOJO' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"278","fix":"279"},"Update the dependencies array to be: [locations, spots, spots.length]",{"range":"280","text":"281"},[932,946],"[locations, spots, spots.length]"]